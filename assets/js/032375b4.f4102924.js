"use strict";(self.webpackChunkwiki_loliot_net=self.webpackChunkwiki_loliot_net||[]).push([[97847],{28453:(n,e,a)=>{a.d(e,{R:()=>c,x:()=>t});var s=a(96540);const i={},l=s.createContext(i);function c(n){const e=s.useContext(l);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:c(n.components),s.createElement(l.Provider,{value:e},n.children)}},73639:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>r,contentTitle:()=>t,default:()=>o,frontMatter:()=>c,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"lang/javascript/node-addon-api/class-binding","title":"Class binding with node-addon-api","description":"C++ Class binding with node-addon-api","source":"@site/docs/lang/javascript/node-addon-api/class-binding.mdx","sourceDirName":"lang/javascript/node-addon-api","slug":"/lang/javascript/node-addon-api/class-binding","permalink":"/docs/lang/javascript/node-addon-api/class-binding","draft":false,"unlisted":false,"editUrl":"https://github.com/hhk7734/wiki/tree/main/docs/lang/javascript/node-addon-api/class-binding.mdx","tags":[],"version":"current","lastUpdatedAt":1742310605000,"frontMatter":{"id":"class-binding","title":"Class binding with node-addon-api","sidebar_label":"C++ Class Binding","description":"C++ Class binding with node-addon-api","keywords":["Node.js","package","node-addon-api","Class"]},"sidebar":"javascript","previous":{"title":"Basics","permalink":"/docs/lang/javascript/node-addon-api/basics"},"next":{"title":"Basics","permalink":"/docs/lang/javascript/emscripten/basics"}}');var i=a(74848),l=a(28453);const c={id:"class-binding",title:"Class binding with node-addon-api",sidebar_label:"C++ Class Binding",description:"C++ Class binding with node-addon-api",keywords:["Node.js","package","node-addon-api","Class"]},t=void 0,r={},d=[{value:"Setup",id:"setup",level:2},{value:"Wrapper",id:"wrapper",level:2},{value:"Build",id:"build",level:2},{value:"Test",id:"test",level:2},{value:"Reference",id:"reference",level:2}];function p(n){const e={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"setup",children:"Setup"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-shell",children:"<package>\n\u251c\u2500\u2500 binding.gyp\n\u251c\u2500\u2500 index.js\n\u251c\u2500\u2500 node_modules\n\u2502   \u2514\u2500\u2500 node-addon-api\n\u2502       \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 package-lock.json\n\u251c\u2500\u2500 test\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 .clang-format\n\u2514\u2500\u2500 c_src\n    \u251c\u2500\u2500 class.cpp\n    \u251c\u2500\u2500 class.h\n    \u251c\u2500\u2500 class_wrapper.cpp\n    \u251c\u2500\u2500 class_wrapper.h\n    \u2514\u2500\u2500 <target>.cpp\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://github.com/nodejs/node-addon-api/blob/master/doc/setup.md",children:"binding.gyp"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-json",metastring:'title="binding.gyp"',children:'{\n    "targets": [\n        {\n            # ...\n\n            "sources": [\n                "c_src/class.cpp",\n                "c_src/class.h",\n                "c_src/class_wrapper.cpp",\n                "c_src/class_wrapper.h",\n                "c_src/<target>.cpp",\n            ],\n\n            #...\n        }\n    ]\n}\n'})}),"\n",(0,i.jsx)(e.h2,{id:"wrapper",children:"Wrapper"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-cpp",metastring:'title="c_src/class.h"',children:"#pragma once\n\nclass Class {\npublic:\n    Class(double value);\n    double get_value(void);\n    double add(double value);\n\nprivate:\n    double m_value;\n};\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-cpp",metastring:'title="c_src/class.cpp"',children:'#include "class.h"\n\nClass::Class(double value)\n    : m_value(value) {}\n\ndouble Class::get_value(void) { return m_value; }\n\ndouble Class::add(double value) {\n    m_value += value;\n    return m_value;\n}\n'})}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"InstanceMethod"}),"\ub85c \ub4f1\ub85d \uac00\ub2a5\ud55c \ud568\uc218\ub294 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4."]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"typedef void (T::*InstanceVoidMethodCallback)(const CallbackInfo& info);"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"typedef Napi::Value (T::*InstanceMethodCallback)(const CallbackInfo& info);"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-cpp",metastring:'title="c_src/class_wrapper.h"',children:'#pragma once\n\n#include "class.h"\n\n#include <napi.h>\n\nclass ClassWrapper: public Napi::ObjectWrap<ClassWrapper> {\npublic:\n    static Napi::Object init(Napi::Env env, Napi::Object exports);\n\n    ClassWrapper(const Napi::CallbackInfo &info);\n\nprivate:\n    static Napi::FunctionReference m_constructor;\n    Class *                        m_Class;\n\n    Napi::Value get_value(const Napi::CallbackInfo &info);\n    Napi::Value add(const Napi::CallbackInfo &info);\n};\n'})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-cpp",metastring:'title="c_src/class_wrapper.cpp"',children:'#include "class_wrapper.h"\n\nNapi::FunctionReference ClassWrapper::m_constructor;\n\nNapi::Object ClassWrapper::init(Napi::Env env, Napi::Object exports) {\n    Napi::HandleScope scope(env);\n\n    Napi::Function funcs\n        = DefineClass(env,\n                      "Class",\n                      {\n                          InstanceMethod("get_value", &ClassWrapper::get_value),\n                          InstanceMethod("add", &ClassWrapper::add),\n                      });\n\n    m_constructor = Napi::Persistent(funcs);\n    m_constructor.SuppressDestruct();\n\n    exports.Set("Class", funcs);\n    return exports;\n}\n\nClassWrapper::ClassWrapper(const Napi::CallbackInfo &info)\n    : Napi::ObjectWrap<ClassWrapper>(info) {\n    Napi::Env         env = info.Env();\n    Napi::HandleScope scope(env);\n\n    if(info.Length() < 1 || ! info[0].IsNumber()) {\n        Napi::TypeError::New(env, "Arguments must be (value).")\n            .ThrowAsJavaScriptException();\n    }\n\n    double value = info[0].As<Napi::Number>();\n\n    m_Class = new Class(value);\n}\n\nNapi::Value ClassWrapper::get_value(const Napi::CallbackInfo &info) {\n    Napi::Env         env = info.Env();\n    Napi::HandleScope scope(env);\n\n    return Napi::Number::New(env, m_Class->get_value());\n}\n\nNapi::Value ClassWrapper::add(const Napi::CallbackInfo &info) {\n    Napi::Env         env = info.Env();\n    Napi::HandleScope scope(env);\n\n    if(info.Length() < 1 || ! info[0].IsNumber()) {\n        Napi::TypeError::New(env, "Arguments must be (value).")\n            .ThrowAsJavaScriptException();\n    }\n\n    double value = info[0].As<Napi::Number>();\n\n    return Napi::Number::New(env, m_Class->add(value));\n}\n'})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-cpp",metastring:'title="c_src/<target>.cpp"',children:'#include "class_wrapper.h"\n\n#include <napi.h>\n\nNapi::Object init_all(Napi::Env env, Napi::Object exports) {\n    return ClassWrapper::init(env, exports);\n}\n\nNODE_API_MODULE(NODE_GYP_MODULE_NAME, init_all)\n'})}),"\n",(0,i.jsx)(e.h2,{id:"build",children:"Build"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-shell",children:"npm run build\n"})}),"\n",(0,i.jsx)(e.h2,{id:"test",children:"Test"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",metastring:'title="test/test.js"',children:'const addon = require("../build/Release/<target>");\n\nconsole.log("wrapper info", addon);\n\nconst testClass = new addon.Class(10);\n\nconsole.log(testClass.get_value());\nconsole.log(testClass.add(2));\n'})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-shell",metastring:"{1}",children:"$ node test/test.js\nwrapper info { Class: [Function: Class] }\n10\n12\n"})}),"\n",(0,i.jsx)(e.h2,{id:"reference",children:"Reference"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://github.com/nodejs/node-addon-api#api",children:"https://github.com/nodejs/node-addon-api#api"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://github.com/nodejs/node-addon-api/blob/master/doc/setup.md",children:"https://github.com/nodejs/node-addon-api/blob/master/doc/setup.md"})}),"\n"]})]})}function o(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(p,{...n})}):p(n)}}}]);