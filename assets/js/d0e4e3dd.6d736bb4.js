"use strict";(self.webpackChunkwiki_loliot_net=self.webpackChunkwiki_loliot_net||[]).push([[42804],{28453:(e,l,n)=>{n.d(l,{R:()=>o,x:()=>i});var s=n(96540);const r={},t=s.createContext(r);function o(e){const l=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function i(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:l},e.children)}},38423:(e,l,n)=>{n.r(l),n.d(l,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"mlops/mlops/kubeflow/kserve/mlflow","title":"KServe with MLFlow","description":"KServe with MLFlow","source":"@site/docs/mlops/mlops/kubeflow/kserve/mlflow.mdx","sourceDirName":"mlops/mlops/kubeflow/kserve","slug":"/mlops/mlops/kubeflow/kserve/mlflow","permalink":"/docs/mlops/mlops/kubeflow/kserve/mlflow","draft":false,"unlisted":false,"editUrl":"https://github.com/hhk7734/wiki/tree/main/docs/mlops/mlops/kubeflow/kserve/mlflow.mdx","tags":[],"version":"current","lastUpdatedAt":1740850310000,"frontMatter":{"id":"mlflow","title":"KServe with MLFlow","sidebar_label":"MLFlow","description":"KServe with MLFlow","keywords":["kserve","serverless","mlserver","mlflow"]},"sidebar":"mlops","previous":{"title":"Custom Runtime","permalink":"/docs/mlops/mlops/kubeflow/kserve/custom"}}');var r=n(74848),t=n(28453);const o={id:"mlflow",title:"KServe with MLFlow",sidebar_label:"MLFlow",description:"KServe with MLFlow",keywords:["kserve","serverless","mlserver","mlflow"]},i=void 0,c={},a=[{value:"\ubaa8\ub378 \uc900\ube44",id:"\ubaa8\ub378-\uc900\ube44",level:2},{value:"MLServer Local Test",id:"mlserver-local-test",level:2},{value:"InferenceService",id:"inferenceservice",level:2}];function m(e){const l={a:"a",code:"code",h2:"h2",li:"li",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(l.h2,{id:"\ubaa8\ub378-\uc900\ube44",children:"\ubaa8\ub378 \uc900\ube44"}),"\n",(0,r.jsx)(l.h2,{id:"mlserver-local-test",children:"MLServer Local Test"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-shell",children:"python3 -m pip install mlserver mlserver-mlflow\n"})}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-shell",children:".\n\u251c\u2500\u2500 model/\n\u2502   \u251c\u2500\u2500 conda.yaml\n\u2502   \u251c\u2500\u2500 MLmodel\n\u2502   \u251c\u2500\u2500 model.pkl\n\u2502   \u251c\u2500\u2500 python_env.yaml\n\u2502   \u2514\u2500\u2500 requirements.txt\n\u251c\u2500\u2500 model-settings.json\n\u2514\u2500\u2500 ...\n"})}),"\n",(0,r.jsxs)(l.ul,{children:["\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.a,{href:"https://mlserver.readthedocs.io/en/stable/reference/model-settings.html",children:"https://mlserver.readthedocs.io/en/stable/reference/model-settings.html"})}),"\n"]}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-json",metastring:'title="model-settings.json"',children:'{\n\t"name": "mlserver-mlflow-test",\n\t"implementation": "mlserver_mlflow.MLflowRuntime",\n\t"parameters": {\n\t\t"uri": "./model"\n\t}\n}\n'})}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-shell",children:"mlserver start .\n"})}),"\n",(0,r.jsxs)(l.ul,{children:["\n",(0,r.jsxs)(l.li,{children:[(0,r.jsx)(l.a,{href:"http://localhost:8080/v2/docs",children:":8080/v2/docs"})," \uc5d0 \uc811\uc18d\ud558\uba74 API \uc815\ubcf4\ub97c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4."]}),"\n"]}),"\n",(0,r.jsx)(l.h2,{id:"inferenceservice",children:"InferenceService"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-yaml",children:"apiVersion: serving.kserve.io/v1beta1\nkind: InferenceService\nmetadata:\n  name: <name>\n  namespace: <namespace>\nspec:\n  predictor:\n    model:\n      modelFormat:\n        name: mlflow\n      protocolVersion: v2\n      storageUri: <modelUri>\n"})})]})}function d(e={}){const{wrapper:l}={...(0,t.R)(),...e.components};return l?(0,r.jsx)(l,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}}}]);