"use strict";(self.webpackChunkwiki_loliot_net=self.webpackChunkwiki_loliot_net||[]).push([[74514],{27555:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"mlops/mlops/workflow/argo-cd/gitops/github-action","title":"GitHub Action","description":"GitHub Action","source":"@site/docs/mlops/mlops/workflow/argo-cd/gitops/github-action.mdx","sourceDirName":"mlops/mlops/workflow/argo-cd/gitops","slug":"/mlops/mlops/workflow/argo-cd/gitops/github-action","permalink":"/docs/mlops/mlops/workflow/argo-cd/gitops/github-action","draft":false,"unlisted":false,"editUrl":"https://github.com/hhk7734/wiki/tree/main/docs/mlops/mlops/workflow/argo-cd/gitops/github-action.mdx","tags":[],"version":"current","lastUpdatedAt":1740938070000,"frontMatter":{"id":"github-action","title":"GitHub Action","sidebar_label":"GitHub Action","description":"GitHub Action","keywords":["gitops","cd","github","action"]},"sidebar":"mlops","previous":{"title":"GitOps","permalink":"/docs/mlops/mlops/workflow/argo-cd/gitops/"},"next":{"title":"GitHub Action Runner","permalink":"/docs/mlops/mlops/workflow/argo-cd/gitops/github-action-runner"}}');var o=s(74848),i=s(28453);const r={id:"github-action",title:"GitHub Action",sidebar_label:"GitHub Action",description:"GitHub Action",keywords:["gitops","cd","github","action"]},c=void 0,a={},l=[{value:"Workflow \ud30c\uc77c",id:"workflow-\ud30c\uc77c",level:2},{value:"\ucee8\ud14d\uc2a4\ud2b8 \uc815\ubcf4",id:"\ucee8\ud14d\uc2a4\ud2b8-\uc815\ubcf4",level:2},{value:"\ub3d9\uc2dc\uc131 \uc81c\uc5b4",id:"\ub3d9\uc2dc\uc131-\uc81c\uc5b4",level:2},{value:"\ubc84\uc804 \ud0dc\uadf8",id:"\ubc84\uc804-\ud0dc\uadf8",level:2},{value:"Container Registry",id:"container-registry",level:2},{value:"ECR",id:"ecr",level:3},{value:"Githup",id:"githup",level:3},{value:"Auto Release",id:"auto-release",level:2},{value:"\ud544\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 Required Job",id:"\ud544\ud130\ub97c-\uc0ac\uc6a9\ud558\ub294-required-job",level:2},{value:"Dummy Job \ub9cc\ub4e4\uae30",id:"dummy-job-\ub9cc\ub4e4\uae30",level:3},{value:"paths-filter \uc0ac\uc6a9\ud558\uae30",id:"paths-filter-\uc0ac\uc6a9\ud558\uae30",level:3},{value:"workflow_dispatch",id:"workflow_dispatch",level:2}];function u(n){const e={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{id:"workflow-\ud30c\uc77c",children:"Workflow \ud30c\uc77c"}),"\n",(0,o.jsxs)(e.p,{children:["GitHub Action\uc744 \uc704\ud55c Workflow yaml\ud30c\uc77c\uc744 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc758 ",(0,o.jsx)(e.code,{children:".github/workflows"})," \ub514\ub809\ud1a0\ub9ac\uc5d0 \uc800\uc7a5\ud558\uace0 GitHub\uc5d0 \ubc18\uc601\ud558\uba74 \uc790\ub3d9\uc73c\ub85c \ubc18\uc601\ub418\uc5b4 \uc2e4\ud589\ub429\ub2c8\ub2e4."]}),"\n",(0,o.jsx)(e.h2,{id:"\ucee8\ud14d\uc2a4\ud2b8-\uc815\ubcf4",children:"\ucee8\ud14d\uc2a4\ud2b8 \uc815\ubcf4"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"https://docs.github.com/en/actions/learn-github-actions/contexts",children:"Accessing contextual information"})}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"\uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ucee8\ud14d\uc2a4\ud2b8 \uc815\ubcf4\ub97c \uc544\ub798 Action\uc744 \ud1b5\ud574 \ud655\uc778 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",children:"name: Context testing\non: push\n\njobs:\n  dump_contexts_to_log:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Dump GitHub context\n        id: github_context_step\n        run: echo '${{ toJSON(github) }}'\n      - name: Dump job context\n        run: echo '${{ toJSON(job) }}'\n      - name: Dump steps context\n        run: echo '${{ toJSON(steps) }}'\n      - name: Dump runner context\n        run: echo '${{ toJSON(runner) }}'\n      - name: Dump strategy context\n        run: echo '${{ toJSON(strategy) }}'\n      - name: Dump matrix context\n        run: echo '${{ toJSON(matrix) }}'\n"})}),"\n",(0,o.jsx)(e.h2,{id:"\ub3d9\uc2dc\uc131-\uc81c\uc5b4",children:"\ub3d9\uc2dc\uc131 \uc81c\uc5b4"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/control-the-concurrency-of-workflows-and-jobs#example-concurrency-groups",children:"Control the concurrency"})}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"\uac19\uc740 Workflow, \uac19\uc740 \ube0c\ub79c\uce58\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 Workflow\ub294 \ub9c8\uc9c0\ub9c9\uc5d0 \uc81c\ucd9c\ub41c \uac83\ub9cc \uc2e4\ud589\ub418\ub3c4\ub85d\ud558\ub294 \uc124\uc815\uc740 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",children:"concurrency:\n  group: ${{ github.workflow }}-${{ github.ref }}\n  cancel-in-progress: true\n"})}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.code,{children:"concurrency"}),"\ub294 Job\uc5d0 \uc120\uc5b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ",(0,o.jsx)(e.code,{children:"group"}),"\uc740 \ub300\uc18c\ubb38\uc790\ub97c \uad6c\ubd84\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."]}),"\n",(0,o.jsx)(e.h2,{id:"\ubc84\uc804-\ud0dc\uadf8",children:"\ubc84\uc804 \ud0dc\uadf8"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",children:'name: Hash\n\non:\n  push:\n    branches:\n      - main\n  workflow_dispatch:\n\njobs:\n  hash:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Get TAG\n        id: tag\n        run: |\n          TAG=$(echo ${{ github.sha }} | cut -c1-7)\n          echo TAG=$TAG\n          echo "tag=$TAG" >> $GITHUB_OUTPUT\n'})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",children:'name: Version\n\non:\n  push:\n    tags:\n      - "v[0-9]+.[0-9]+.[0-9]+"\n\njobs:\n  version:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Get TAG\n        id: tag\n        run: |\n          TAG=${{ github.ref_name }}\n          echo TAG=$TAG\n          echo "tag=$TAG" >> $GITHUB_OUTPUT\n'})}),"\n",(0,o.jsx)(e.h2,{id:"container-registry",children:"Container Registry"}),"\n",(0,o.jsx)(e.h3,{id:"ecr",children:"ECR"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",children:"name: Push to Amazon ECR\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  build:\n    name: Build and Push Image\n    runs-on: ubuntu-latest\n    steps:\n      - name: Configure AWS credentials\n        uses: aws-actions/configure-aws-credentials@v4\n        with:\n          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n          aws-region: us-west-2\n\n      - name: Login to Amazon ECR\n        id: login-ecr\n        uses: aws-actions/amazon-ecr-login@v2\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v3\n\n      # https://github.com/docker/build-push-action\n      - name: Build and push\n        uses: docker/build-push-action@v6\n        with:\n          context: .\n          push: true\n          tags: |\n            ${{ steps.login-ecr.outputs.registry }}/backend:${{ steps.tag.outputs.tag }}\n          cache-from: type=gha\n          cache-to: type=gha,mode=max\n"})}),"\n",(0,o.jsx)(e.h3,{id:"githup",children:"Githup"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",children:"name: Push to GitHub Container Registry\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  build:\n    name: Build and Push Image\n    runs-on: ubuntu-latest\n    steps:\n      # https://github.com/docker/login-action\n      - name: Login to GitHub Container Registry\n        uses: docker/login-action@v3\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PAT }}\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v3\n\n      # https://github.com/docker/build-push-action\n      - name: Build and push\n        uses: docker/build-push-action@v6\n        with:\n          context: .\n          push: true\n          tags: |\n            ghcr.io/${{ github.repository_owner }}/backend:${{ steps.tag.outputs.tag }}\n          cache-from: type=gha\n          cache-to: type=gha,mode=max\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"/docs/mlops/kubernetes/configuration/secret#imagepullsecrets",children:"GitHub Docker imagePullSecrets"})}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"auto-release",children:"Auto Release"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",children:'name: Auto Release\n\non:\n  push:\n    tags:\n      - "v[0-9]+.[0-9]+.[0-9]+"\n\njobs:\n  release:\n    name: Publish auto release\n    runs-on: ubuntu-latest\n    needs: [build]\n    permissions:\n      contents: write\n    steps:\n      - name: Release\n        uses: softprops/action-gh-release@v2\n        with:\n          generate_release_notes: true\n'})}),"\n",(0,o.jsx)(e.h2,{id:"\ud544\ud130\ub97c-\uc0ac\uc6a9\ud558\ub294-required-job",children:"\ud544\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 Required Job"}),"\n",(0,o.jsxs)(e.p,{children:["Required job\uc774 ",(0,o.jsx)(e.code,{children:"paths"}),"\ub098 ",(0,o.jsx)(e.code,{children:"paths-ignore"})," \uac19\uc740 \uc635\uc158\uc73c\ub85c \uc778\ud574 \uc2e4\ud589\ub418\uc9c0 \uc54a\uc73c\uba74 ",(0,o.jsx)(e.code,{children:"Pending"})," \uc0c1\ud0dc\uc5d0 \ube60\uc838\uc11c PR\uc744 \uc644\ub8cc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574\uc11c\ub294"]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"\ubc18\ub300\ub418\ub294 \ud544\ud130\ub97c \uac16\ub294 Workflow\ub97c \ub9cc\ub4e4\uace0 Job \uc774\ub984\uc774 \uac19\uc740 dummy Job\uc744 \ub9cc\ub4dc\ub294 \ubc29\ubc95"}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.a,{href:"https://github.com/dorny/paths-filter",children:"dorny/paths-filter"}),"\ub97c \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95"]}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"\uc774 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,o.jsxs)(e.admonition,{type:"info",children:[(0,o.jsxs)(e.p,{children:["Job \uc2e4\ud589 \uacb0\uacfc\ub294 ",(0,o.jsx)(e.code,{children:"success"}),", ",(0,o.jsx)(e.code,{children:"failure"}),", ",(0,o.jsx)(e.code,{children:"cancelled"}),", ",(0,o.jsx)(e.code,{children:"skipped"})," \uc911 \ud558\ub098\uc785\ub2c8\ub2e4. ",(0,o.jsx)(e.code,{children:"Pending"}),"\uc740 \uc2e4\ud589 \uc790\uccb4\uac00 \uc548\ub41c \uc0c1\ud0dc\uc785\ub2c8\ub2e4."]}),(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.code,{children:"success"}),"\uc640 ",(0,o.jsx)(e.code,{children:"skipped"}),"\ub294 Required \uac80\uc0ac\ub97c \ud1b5\uacfc\ud569\ub2c8\ub2e4."]})]}),"\n",(0,o.jsx)(e.h3,{id:"dummy-job-\ub9cc\ub4e4\uae30",children:"Dummy Job \ub9cc\ub4e4\uae30"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",metastring:'title=".github/workflows/job.yaml"',children:'name: job\n\non:\n  pull_request:\n    branches:\n      - main\n    paths:\n      - "backend/**"\n\njobs:\n  tests:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Test backend\n        run: |\n          # ...\n'})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",metastring:'title=".github/workflows/job-dummy.yaml"',children:'name: job\n\non:\n  pull_request:\n    branches:\n      - main\n    paths-ignore:\n      - "backend/**"\n\njobs:\n  tests:\n    if: false\n    runs-on: ubuntu-latest\n    steps:\n      - run: echo "Unreachable"\n'})}),"\n",(0,o.jsx)(e.h3,{id:"paths-filter-\uc0ac\uc6a9\ud558\uae30",children:"paths-filter \uc0ac\uc6a9\ud558\uae30"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"https://github.com/dorny/paths-filter?tab=readme-ov-file#usage",children:"paths-filter Usage"})}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",children:"jobs:\n  changes:\n    runs-on: ubuntu-latest\n    permissions:\n      pull-requests: read\n    outputs:\n      backend: ${{ steps.filter.outputs.backend }}\n      backend_files: ${{ steps.filter.outputs.backend_files }}\n      frontend: ${{ steps.filter.outputs.frontend }}\n    steps:\n      # PR\uc5d0 \ub300\ud55c filter\uc758 \uacbd\uc6b0 checkout\uc774 \ud544\uc694 \uc5c6\uc2b5\ub2c8\ub2e4.\n      - name: Find changes\n        uses: dorny/paths-filter@v3\n        id: filter\n        with:\n          list-files: shell\n          filters: |\n            backend:\n              - \"backend/**\"\n            frontend:\n              - \"frontend/**\"\n\n  backend-tests:\n    needs: changes\n    if: needs.changes.outputs.backend == 'true'\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Test backend\n        run: |\n          # ...\n\n      - name: Lint backend\n        run: |\n          for file in ${{ needs.changes.outputs.backend_files }}; do\n            # ...\n          done\n\n  frontend-tests:\n    needs: changes\n    if: needs.changes.outputs.frontend == 'true'\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Test frontend\n        run: |\n          # ...\n"})}),"\n",(0,o.jsx)(e.h2,{id:"workflow_dispatch",children:"workflow_dispatch"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"https://docs.github.com/en/actions/reference/events-that-trigger-workflows#workflow_dispatch",children:"workflow_dispatch"})}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",children:"on:\n  workflow_dispatch:\n"})}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.code,{children:"inputs"}),"\ub97c \uc120\uc5b8\ud558\uc9c0 \uc54a\ub354\ub77c\ub3c4 \ube0c\ub79c\uce58 \ub610\ub294 \ud0dc\uadf8 \uc120\ud0dd\uc740 \uac00\ub2a5\ud569\ub2c8\ub2e4."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",children:"on:\n  workflow_dispatch:\n    inputs:\n      <name>:\n        ## input \ucc3d\uc5d0 \ud45c\uc2dc\ub418\ub294 \ub0b4\uc6a9\uc785\ub2c8\ub2e4.\n        description: <description>\n        # required: false\n        type: <string|boolean|environment|choice>\n        # default:\n        ## type\uc774 choice\uc778 \uacbd\uc6b0 \uc120\ud0dd\uc9c0\uc785\ub2c8\ub2e4.\n        # options: []\n"})}),"\n",(0,o.jsx)(e.admonition,{type:"info",children:(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.code,{children:"type: environment"}),"\ub97c \uc0ac\uc6a9\ud558\ub824\uba74, Settings\uc5d0\uc11c Environments\ub97c \uba3c\uc800 \uc124\uc815\ud574\uc57c\ud569\ub2c8\ub2e4."]})})]})}function d(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(u,{...n})}):u(n)}},28453:(n,e,s)=>{s.d(e,{R:()=>r,x:()=>c});var t=s(96540);const o={},i=t.createContext(o);function r(n){const e=t.useContext(i);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),t.createElement(i.Provider,{value:e},n.children)}}}]);