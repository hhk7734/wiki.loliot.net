"use strict";(self.webpackChunkwiki_loliot_net=self.webpackChunkwiki_loliot_net||[]).push([[76959],{28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var o=t(96540);const a={},c=o.createContext(a);function s(e){const n=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(c.Provider,{value:n},e.children)}},45585:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>i});const o=JSON.parse('{"id":"lang/cpp/advanced-cpp/extern-c/class","title":"C++ class\ub97c C\uc5d0\uc11c \uc0ac\uc6a9\ud558\uae30","description":"class","source":"@site/docs/lang/cpp/advanced-cpp/extern-c/class.mdx","sourceDirName":"lang/cpp/advanced-cpp/extern-c","slug":"/lang/cpp/advanced-cpp/extern-c/class","permalink":"/docs/lang/cpp/advanced-cpp/extern-c/class","draft":false,"unlisted":false,"editUrl":"https://github.com/hhk7734/wiki/tree/main/docs/lang/cpp/advanced-cpp/extern-c/class.mdx","tags":[],"version":"current","lastUpdatedAt":1745770667000,"frontMatter":{"id":"class","title":"C++ class\ub97c C\uc5d0\uc11c \uc0ac\uc6a9\ud558\uae30","description":"class","keywords":["C++","extern C","class"]},"sidebar":"cpp","previous":{"title":"C++ -> C or C -> C++","permalink":"/docs/lang/cpp/advanced-cpp/extern-c/"},"next":{"title":"Library \ub9cc\ub4e4\uae30","permalink":"/docs/lang/cpp/package/vcpkg/library"}}');var a=t(74848),c=t(28453);const s={id:"class",title:"C++ class\ub97c C\uc5d0\uc11c \uc0ac\uc6a9\ud558\uae30",description:"class",keywords:["C++","extern C","class"]},l=void 0,r={},i=[];function p(e){const n={code:"code",pre:"pre",...(0,c.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",metastring:'title="foo.h"',children:"#pragma once\n\nclass Foo {\npublic:\n  Foo(int value) : value(value) {}\n  ~Foo() {}\n\n  void set_value(int value);\n  int get_value();\n\nprivate:\n  int value;\n};\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",metastring:'title="foo.cpp"',children:'#include "foo.h"\n\nvoid Foo::set_value(int value) { this->value = value; }\n\nint Foo::get_value() { return this->value; }\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",metastring:'title="foo_cwrapper.h"',children:'#pragma once\n\n#ifdef __cplusplus\nextern "C" {\n#endif\n\ntypedef struct Foo Foo;\n\nFoo *Foo_new(int value);\nvoid Foo_delete(Foo *self);\n\nvoid Foo_set_value(Foo *self, int value);\nint Foo_get_value(Foo *self);\n\n#ifdef __cplusplus\n}\n#endif\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",metastring:'title="foo_cwrapper.cpp"',children:'#include "foo_cwrapper.h"\n#include "foo.h"\n\nFoo *Foo_new(int value) { return new Foo(value); }\n\nvoid Foo_delete(Foo *self) { delete self; }\n\nvoid Foo_set_value(Foo *self, int value) { self->set_value(value); }\n\nint Foo_get_value(Foo *self) { return self->get_value(); }\n'})})]})}function d(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}}}]);