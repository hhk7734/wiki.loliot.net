"use strict";(self.webpackChunkwiki_loliot_net=self.webpackChunkwiki_loliot_net||[]).push([[68677],{28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>s});var i=t(96540);const o={},r=i.createContext(o);function c(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),i.createElement(r.Provider,{value:n},e.children)}},56023:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>f,frontMatter:()=>c,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"mcu/infineon/tricore-tc27d-stm","title":"TriCore TC27D STM(System Timer)","description":"TriCore TC27D STM(System Timer)","source":"@site/docs/mcu/infineon/tricore-tc27d-stm.mdx","sourceDirName":"mcu/infineon","slug":"/mcu/infineon/tricore-tc27d-stm","permalink":"/docs/mcu/infineon/tricore-tc27d-stm","draft":false,"unlisted":false,"editUrl":"https://github.com/hhk7734/wiki/tree/main/docs/mcu/infineon/tricore-tc27d-stm.mdx","tags":[],"version":"current","lastUpdatedAt":1746964508000,"frontMatter":{"id":"tricore-tc27d-stm","title":"TriCore TC27D STM(System Timer)","sidebar_label":"TC27D STM(System Timer)","description":"TriCore TC27D STM(System Timer)","keywords":["Infineon","TriCore","TC275","STM"]},"sidebar":"infineon","previous":{"title":"TC27D Ports(DIO)","permalink":"/docs/mcu/infineon/tricore-tc27d-ports"},"next":{"title":"TC27D BSP(Time, GPIO)","permalink":"/docs/mcu/infineon/tricore-tc27d-bsp"}}');var o=t(74848),r=t(28453);const c={id:"tricore-tc27d-stm",title:"TriCore TC27D STM(System Timer)",sidebar_label:"TC27D STM(System Timer)",description:"TriCore TC27D STM(System Timer)",keywords:["Infineon","TriCore","TC275","STM"]},s=void 0,d={},a=[{value:"Related header",id:"related-header",level:2},{value:"Examples",id:"examples",level:2},{value:"\uc8fc\uae30\uc801\uc778 \ud568\uc218 \ud638\ucd9c",id:"\uc8fc\uae30\uc801\uc778-\ud568\uc218-\ud638\ucd9c",level:3}];function l(e){const n={admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"HW: ShieldBuddy TC275"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"There are as many STM modules as there are CPUs in the system. Thus each CPU can use one STM for its time base"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"related-header",children:"Related header"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"IfxStm_cfg.h"}),": STM on-chip implementation data."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"IfxStm.h"}),": STM basic functionality."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"IfxStm_Timer.h"}),": STM TIMER details."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsx)(n.p,{children:"\ud3f4\ub354\ub97c \uc0c8\ub85c \uc0dd\uc131\ud55c \uacbd\uc6b0 clean projet \ud6c4, \ub2e4\uc2dc \ube4c\ub4dc\ud574\uc57c \ud569\ub2c8\ub2e4."})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"0_Src/AppSw/Tricore/TC27D_lib/Config/Ifx_IntPrioDef.h"}),"\ub97c \ub9cc\ub4e4\uace0 \uc544\ub798\uc640 \uac19\uc774 \uc791\uc131\ud569\ub2c8\ub2e4."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-c",children:"#pragma once\n\n#define IFX_INTPRIO_STM0_SR0 10\n"})}),"\n",(0,o.jsx)(n.h3,{id:"\uc8fc\uae30\uc801\uc778-\ud568\uc218-\ud638\ucd9c",children:"\uc8fc\uae30\uc801\uc778 \ud568\uc218 \ud638\ucd9c"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-c",children:'#include "IfxCpu.h"\n#include "IfxPort_Io.h"\n#include "IfxPort_PinMap.h"\n#include "IfxScuWdt.h"\n#include "IfxStm.h"\n#include "Ifx_IntPrioDef.h"\n#include "Ifx_Types.h"\n\nIfxCpu_syncEvent cpuSyncEvent = 0;\n\nIfx_STM *            stmSfr;\nIfxStm_CompareConfig stmConfig;\n\n// P10.2 \ud540\uc744 OUTPUT\uc73c\ub85c \uc124\uc815.\nconst IfxPort_Io_ConfigPin configPin[] = {\n    {&IfxPort_P10_2,\n     IfxPort_Mode_outputPushPullGeneral,\n     IfxPort_PadDriver_cmosAutomotiveSpeed1},\n};\n\nconst IfxPort_Io_Config conf\n    = {sizeof(configPin) / sizeof(IfxPort_Io_ConfigPin),\n       (IfxPort_Io_ConfigPin *)configPin};\n\nIFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0) {\n    IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);\n    IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);\n\n    // \ud568\uc218 \ud638\ucd9c\n    IfxPort_setPinState(&MODULE_P10, 2, IfxPort_State_toggled);\n}\n\nvoid STM0_init(void) {\n    stmSfr = &MODULE_STM0;\n    IfxStm_initCompareConfig(&stmConfig);\n    // configure to generate interrupt every 100 us\n    sint32 ticks              = IfxStm_getTicksFromMicroseconds(stmSfr, 100);\n    stmConfig.ticks           = ticks;\n    stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;\n    stmConfig.typeOfService   = IfxSrc_Tos_cpu0;\n    IfxStm_initCompare(stmSfr, &stmConfig);\n}\n\nint core0_main(void) {\n    IfxCpu_enableInterrupts();\n    /*\n     * !!WATCHDOG0 AND SAFETY WATCHDOG ARE DISABLED HERE!!\n     * Enable the watchdog in the demo if it is required and also service the\n     * watchdog periodically\n     * */\n    IfxScuWdt_disableCpuWatchdog(IfxScuWdt_getCpuWatchdogPassword());\n    IfxScuWdt_disableSafetyWatchdog(IfxScuWdt_getSafetyWatchdogPassword());\n\n    /* Cpu sync event wait*/\n    IfxCpu_emitEvent(&cpuSyncEvent);\n    IfxCpu_waitEvent(&cpuSyncEvent, 1);\n\n    // \ud540 \uc124\uc815 \uc801\uc6a9.\n    IfxPort_Io_initModule(&conf);\n\n    STM0_init();\n\n    while(1) {\n\n    }\n\n    return 1;\n}\n'})})]})}function f(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);