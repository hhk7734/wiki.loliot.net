"use strict";(self.webpackChunkwiki_loliot_net=self.webpackChunkwiki_loliot_net||[]).push([[77395],{28453:(e,n,o)=>{o.d(n,{R:()=>l,x:()=>r});var t=o(96540);const a={},c=t.createContext(a);function l(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),t.createElement(c.Provider,{value:n},e.children)}},92635:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>i});const t=JSON.parse('{"id":"mlops/serving/vllm/kvevent","title":"vLLM KVEvent","description":"vLLM KVEvent","source":"@site/docs/mlops/serving/vllm/kvcache.mdx","sourceDirName":"mlops/serving/vllm","slug":"/mlops/serving/vllm/kvevent","permalink":"/docs/mlops/serving/vllm/kvevent","draft":false,"unlisted":false,"editUrl":"https://github.com/hhk7734/wiki/tree/main/docs/mlops/serving/vllm/kvcache.mdx","tags":[],"version":"current","lastUpdatedAt":1757698945000,"frontMatter":{"id":"kvevent","title":"vLLM KVEvent","sidebar_label":"KVEvent","description":"vLLM KVEvent","keywords":["vLLM","KVEvent"]},"sidebar":"serving","previous":{"title":"KVConnector","permalink":"/docs/mlops/serving/vllm/kvconnector"}}');var a=o(74848),c=o(28453);const l={id:"kvevent",title:"vLLM KVEvent",sidebar_label:"KVEvent",description:"vLLM KVEvent",keywords:["vLLM","KVEvent"]},r=void 0,s={},i=[];function v(e){const n={mermaid:"mermaid",...(0,c.R)(),...e.components};return(0,a.jsx)(n.mermaid,{value:"sequenceDiagram\n  Scheduler ->> KVCacheManager: allocate_slots()\n  KVCacheManager ->> KVCacheCoordinator: allocate_new_blocks()\n  KVCacheCoordinator ->> SingleTypeKVCacheManager: allocate_new_blocks()\n  SingleTypeKVCacheManager ->> BlockPool: get_new_blocks()\n  BlockPool ->> BlockPool: queue.append(BlockRemoved())\n  BlockPool --\x3e> SingleTypeKVCacheManager: list[KVCacheBlock]\n  SingleTypeKVCacheManager --\x3e> KVCacheCoordinator: list[KVCacheBlock]\n  KVCacheCoordinator --\x3e> KVCacheManager: list[KVCacheBlock]\n  KVCacheManager --\x3e> Scheduler: KVCacheBlocks\n\n  Note over Scheduler: receive KVCache from remote\n\n  Scheduler ->> KVCacheManager: cache_blocks()\n  KVCacheManager ->> KVCacheCoordinator: cache_blocks()\n  KVCacheCoordinator ->> SingleTypeKVCacheManager: cache_blocks()\n  SingleTypeKVCacheManager ->> BlockPool: cache_full_blocks()\n  BlockPool ->> BlockPool: queue.append(BlockStored())\n\n  Scheduler ->> KVCacheManager: take_events()\n  KVCacheManager ->> BlockPool: take_events()\n  BlockPool --\x3e> KVCacheManager: list[KVCacheEvent]\n  KVCacheManager --\x3e> Scheduler: list[KVCacheEvent]\n  Scheduler ->> EventPublisher: publish()"})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(v,{...e})}):v(e)}}}]);