"use strict";(self.webpackChunkwiki_loliot_net=self.webpackChunkwiki_loliot_net||[]).push([[44798],{28453:(t,e,n)=>{n.d(e,{R:()=>s,x:()=>i});var a=n(96540);const r={},o=a.createContext(r);function s(t){const e=a.useContext(o);return a.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function i(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:s(t.components),a.createElement(o.Provider,{value:e},t.children)}},61572:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"mlops/provisioning/karpenter/karpenter","title":"Karpenter","description":"Karpenter","source":"@site/docs/mlops/provisioning/karpenter/karpenter.mdx","sourceDirName":"mlops/provisioning/karpenter","slug":"/mlops/provisioning/karpenter/","permalink":"/docs/mlops/provisioning/karpenter/","draft":false,"unlisted":false,"editUrl":"https://github.com/hhk7734/wiki/tree/main/docs/mlops/provisioning/karpenter/karpenter.mdx","tags":[],"version":"current","lastUpdatedAt":1761493575000,"frontMatter":{"id":"karpenter","title":"Karpenter","sidebar_label":"Karpenter","description":"Karpenter","keywords":["karpenter","pulumi","helm"]},"sidebar":"provisioning","previous":{"title":"Spegel","permalink":"/docs/mlops/provisioning/spegel/"},"next":{"title":"Spot Event","permalink":"/docs/mlops/provisioning/karpenter/spot-event"}}');var r=n(74848),o=n(28453);const s={id:"karpenter",title:"Karpenter",sidebar_label:"Karpenter",description:"Karpenter",keywords:["karpenter","pulumi","helm"]},i=void 0,l={},c=[{value:"\uc0ac\uc804 \uc694\uad6c \uc0ac\ud56d",id:"\uc0ac\uc804-\uc694\uad6c-\uc0ac\ud56d",level:2},{value:"NodeGroup Role",id:"nodegroup-role",level:3},{value:"Karpenter Controller Role",id:"karpenter-controller-role",level:3},{value:"\uc124\uce58",id:"\uc124\uce58",level:2},{value:"\uc5c5\uadf8\ub808\uc774\ub4dc",id:"\uc5c5\uadf8\ub808\uc774\ub4dc",level:2}];function p(t){const e={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{id:"\uc0ac\uc804-\uc694\uad6c-\uc0ac\ud56d",children:"\uc0ac\uc804 \uc694\uad6c \uc0ac\ud56d"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"https://github.com/aws/karpenter/blob/main/website/content/en/preview/getting-started/getting-started-with-karpenter/cloudformation.yaml",children:"https://github.com/aws/karpenter/blob/main/website/content/en/preview/getting-started/getting-started-with-karpenter/cloudformation.yaml"})}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"\uc9c4\ud589 \uc804 Spot Role\uc5d0 \ub300\ud55c \uc124\uc815\uc744 \uba3c\uc800 \ud574\uc8fc\uc138\uc694."}),"\n",(0,r.jsx)(e.h3,{id:"nodegroup-role",children:"NodeGroup Role"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",children:'const nodeGroupRoleName = "karpenter-ng-role";\nconst nodeGroupRole = new aws.iam.Role(\n\tnodeGroupRoleName,\n\t{\n\t\tnamePrefix: `${nodeGroupRoleName}-`,\n\t\tassumeRolePolicy: {\n\t\t\tVersion: "2012-10-17",\n\t\t\tStatement: [\n\t\t\t\t{\n\t\t\t\t\tEffect: "Allow",\n\t\t\t\t\tPrincipal: {\n\t\t\t\t\t\tService: "ec2.amazonaws.com",\n\t\t\t\t\t},\n\t\t\t\t\tAction: "sts:AssumeRole",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\ttags: {\n\t\t\tName: nodeGroupRoleName,\n\t\t\t"loliot.net/stack": variable.stackName,\n\t\t},\n\t},\n\t{ protect: true },\n);\n\nconst nodeGroupInstanceProfileName = "karpenter-ng-instacne-profile";\nconst nodeGroupInstanceProfile = new aws.iam.InstanceProfile(\n\tnodeGroupInstanceProfileName,\n\t{\n\t\tnamePrefix: `${nodeGroupInstanceProfileName}-`,\n\t\trole: nodeGroupRole.name,\n\t\ttags: {\n\t\t\tName: nodeGroupInstanceProfileName,\n\t\t\t"loliot.net/stack": variable.stackName,\n\t\t},\n\t},\n\t{ protect: true },\n);\n\nconst nodeGroupPolicyARNs = {\n\t"0": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",\n\t"1": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",\n\t"2": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",\n\t"3": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore", // Karpenter\n};\n\nconst nodeGroupRpas = Object.entries(nodeGroupPolicyARNs).map(\n\t([i, arn]) =>\n\t\tnew aws.iam.RolePolicyAttachment(\n\t\t\t`karpenter-ng-rpa-${i}`,\n\t\t\t{\n\t\t\t\tpolicyArn: arn,\n\t\t\t\trole: nodeGroupRole.name,\n\t\t\t},\n\t\t\t{ protect: true },\n\t\t),\n);\n'})}),"\n",(0,r.jsx)(e.h3,{id:"karpenter-controller-role",children:"Karpenter Controller Role"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"https://github.com/aws/karpenter-provider-aws/blob/main/website/content/en/preview/getting-started/getting-started-with-karpenter/cloudformation.yaml",children:"https://github.com/aws/karpenter-provider-aws/blob/main/website/content/en/preview/getting-started/getting-started-with-karpenter/cloudformation.yaml"})}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",children:'const controllerRoleName = "karpenter-controller-role";\nconst controllerRole = new aws.iam.Role(\n\tcontrollerRoleName,\n\t{\n\t\tnamePrefix: `${controllerRoleName}-`,\n\t\tassumeRolePolicy: {\n\t\t\tVersion: "2012-10-17",\n\t\t\tStatement: [\n\t\t\t\t{\n\t\t\t\t\tEffect: "Allow",\n\t\t\t\t\tPrincipal: {\n\t\t\t\t\t\tFederated: variable.eks.core.eks.apply((eks) => eks.oidcProvider.arn),\n\t\t\t\t\t},\n\t\t\t\t\tCondition: {\n\t\t\t\t\t\tStringEquals: variable.eks.core.eks.apply((eks) => ({\n\t\t\t\t\t\t\t[`${eks.oidcProvider.url}:aud`]: "sts.amazonaws.com",\n\t\t\t\t\t\t\t[`${eks.oidcProvider.url}:sub`]:\n\t\t\t\t\t\t\t\t// system:serviceaccount:<namespace>:<serviceAccount>\n\t\t\t\t\t\t\t\t"system:serviceaccount:kube-system:karpenter",\n\t\t\t\t\t\t})),\n\t\t\t\t\t},\n\t\t\t\t\tAction: "sts:AssumeRoleWithWebIdentity",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\ttags: {\n\t\t\tName: controllerRoleName,\n\t\t\t"loliot.net/stack": variable.stackName,\n\t\t},\n\t},\n\t{ protect: true },\n);\n\nconst controllerPolicyName = "karpenter-controller-policy";\nconst controllerPolicy = new aws.iam.Policy(\n\tcontrollerPolicyName,\n\t{\n\t\tnamePrefix: `${controllerPolicyName}-`,\n\t\tpolicy: {\n\t\t\tVersion: "2012-10-17",\n\t\t\tStatement: [\n\t\t\t\t{\n\t\t\t\t\tSid: "AllowScopedEC2InstanceActions",\n\t\t\t\t\tEffect: "Allow",\n\t\t\t\t\tResource: [\n\t\t\t\t\t\t`arn:aws:ec2:${variable.awsRegion}::image/*`,\n\t\t\t\t\t\t`arn:aws:ec2:${variable.awsRegion}::snapshot/*`,\n\t\t\t\t\t\t`arn:aws:ec2:${variable.awsRegion}:*:security-group/*`,\n\t\t\t\t\t\t`arn:aws:ec2:${variable.awsRegion}:*:subnet/*`,\n\t\t\t\t\t\t`arn:aws:ec2:${variable.awsRegion}:*:launch-template/*`,\n\t\t\t\t\t],\n\t\t\t\t\tAction: ["ec2:RunInstances", "ec2:CreateFleet"],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tSid: "AllowScopedEC2InstanceActionsWithTags",\n\t\t\t\t\tEffect: "Allow",\n\t\t\t\t\tResource: [\n\t\t\t\t\t\t`arn:aws:ec2:${variable.awsRegion}:*:fleet/*`,\n\t\t\t\t\t\t`arn:aws:ec2:${variable.awsRegion}:*:instance/*`,\n\t\t\t\t\t\t`arn:aws:ec2:${variable.awsRegion}:*:volume/*`,\n\t\t\t\t\t\t`arn:aws:ec2:${variable.awsRegion}:*:network-interface/*`,\n\t\t\t\t\t\t`arn:aws:ec2:${variable.awsRegion}:*:launch-template/*`,\n\t\t\t\t\t\t`arn:aws:ec2:${variable.awsRegion}:*:spot-instances-request/*`,\n\t\t\t\t\t],\n\t\t\t\t\tAction: ["ec2:RunInstances", "ec2:CreateFleet", "ec2:CreateLaunchTemplate"],\n\t\t\t\t\tCondition: {\n\t\t\t\t\t\tStringEquals: {\n\t\t\t\t\t\t\t[`aws:RequestTag/kubernetes.io/cluster/${variable.eksClusterName}`]: "owned",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tStringLike: {\n\t\t\t\t\t\t\t"aws:RequestTag/karpenter.sh/nodepool": "*",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tSid: "AllowScopedResourceCreationTagging",\n\t\t\t\t\tEffect: "Allow",\n\t\t\t\t\tResource: [\n\t\t\t\t\t\t`arn:aws:ec2:${variable.awsRegion}:*:fleet/*`,\n\t\t\t\t\t\t`arn:aws:ec2:${variable.awsRegion}:*:instance/*`,\n\t\t\t\t\t\t`arn:aws:ec2:${variable.awsRegion}:*:volume/*`,\n\t\t\t\t\t\t`arn:aws:ec2:${variable.awsRegion}:*:network-interface/*`,\n\t\t\t\t\t\t`arn:aws:ec2:${variable.awsRegion}:*:launch-template/*`,\n\t\t\t\t\t\t`arn:aws:ec2:${variable.awsRegion}:*:spot-instances-request/*`,\n\t\t\t\t\t],\n\t\t\t\t\tAction: "ec2:CreateTags",\n\t\t\t\t\tCondition: {\n\t\t\t\t\t\tStringEquals: {\n\t\t\t\t\t\t\t[`aws:RequestTag/kubernetes.io/cluster/${variable.eksClusterName}`]: "owned",\n\t\t\t\t\t\t\t"ec2:CreateAction": ["RunInstances", "CreateFleet", "CreateLaunchTemplate"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tStringLike: {\n\t\t\t\t\t\t\t"aws:RequestTag/karpenter.sh/nodepool": "*",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tSid: "AllowScopedResourceTagging",\n\t\t\t\t\tEffect: "Allow",\n\t\t\t\t\tResource: `arn:aws:ec2:${variable.awsRegion}:*:instance/*`,\n\t\t\t\t\tAction: "ec2:CreateTags",\n\t\t\t\t\tCondition: {\n\t\t\t\t\t\tStringEquals: {\n\t\t\t\t\t\t\t[`aws:ResourceTag/kubernetes.io/cluster/${variable.eksClusterName}`]: "owned",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tStringLike: {\n\t\t\t\t\t\t\t"aws:ResourceTag/karpenter.sh/nodepool": "*",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t"ForAllValues:StringEquals": {\n\t\t\t\t\t\t\t"aws:TagKeys": ["karpenter.sh/nodeclaim", "Name"],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tSid: "AllowScopedDeletion",\n\t\t\t\t\tEffect: "Allow",\n\t\t\t\t\tResource: [\n\t\t\t\t\t\t`arn:aws:ec2:${variable.awsRegion}:*:instance/*`,\n\t\t\t\t\t\t`arn:aws:ec2:${variable.awsRegion}:*:launch-template/*`,\n\t\t\t\t\t],\n\t\t\t\t\tAction: ["ec2:TerminateInstances", "ec2:DeleteLaunchTemplate"],\n\t\t\t\t\tCondition: {\n\t\t\t\t\t\tStringEquals: {\n\t\t\t\t\t\t\t[`aws:ResourceTag/kubernetes.io/cluster/${variable.eksClusterName}`]: "owned",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tStringLike: {\n\t\t\t\t\t\t\t"aws:ResourceTag/karpenter.sh/nodepool": "*",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tSid: "AllowRegionalReadActions",\n\t\t\t\t\tEffect: "Allow",\n\t\t\t\t\tResource: "*",\n\t\t\t\t\tAction: [\n\t\t\t\t\t\t"ec2:DescribeAvailabilityZones",\n\t\t\t\t\t\t"ec2:DescribeImages",\n\t\t\t\t\t\t"ec2:DescribeInstances",\n\t\t\t\t\t\t"ec2:DescribeInstanceTypeOfferings",\n\t\t\t\t\t\t"ec2:DescribeInstanceTypes",\n\t\t\t\t\t\t"ec2:DescribeLaunchTemplates",\n\t\t\t\t\t\t"ec2:DescribeSecurityGroups",\n\t\t\t\t\t\t"ec2:DescribeSpotPriceHistory",\n\t\t\t\t\t\t"ec2:DescribeSubnets",\n\t\t\t\t\t],\n\t\t\t\t\tCondition: {\n\t\t\t\t\t\tStringEquals: {\n\t\t\t\t\t\t\t"aws:RequestedRegion": `${variable.awsRegion}`,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tSid: "AllowSSMReadActions",\n\t\t\t\t\tEffect: "Allow",\n\t\t\t\t\tResource: `arn:aws:ssm:${variable.awsRegion}::parameter/aws/service/*`,\n\t\t\t\t\tAction: "ssm:GetParameter",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tSid: "AllowPricingReadActions",\n\t\t\t\t\tEffect: "Allow",\n\t\t\t\t\tResource: "*",\n\t\t\t\t\tAction: "pricing:GetProducts",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tSid: "AllowPassingInstanceRole",\n\t\t\t\t\tEffect: "Allow",\n\t\t\t\t\tResource: nodeGroupRole.arn,\n\t\t\t\t\tAction: "iam:PassRole",\n\t\t\t\t\tCondition: {\n\t\t\t\t\t\tStringEquals: {\n\t\t\t\t\t\t\t"iam:PassedToService": "ec2.amazonaws.com",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tSid: "AllowScopedInstanceProfileCreationActions",\n\t\t\t\t\tEffect: "Allow",\n\t\t\t\t\tResource: "*",\n\t\t\t\t\tAction: "iam:CreateInstanceProfile",\n\t\t\t\t\tCondition: {\n\t\t\t\t\t\tStringEquals: {\n\t\t\t\t\t\t\t[`aws:RequestTag/kubernetes.io/cluster/${variable.eksClusterName}`]: "owned",\n\t\t\t\t\t\t\t"aws:RequestTag/topology.kubernetes.io/region": `${variable.awsRegion}`,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tStringLike: {\n\t\t\t\t\t\t\t"aws:RequestTag/karpenter.k8s.aws/ec2nodeclass": "*",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tSid: "AllowScopedInstanceProfileTagActions",\n\t\t\t\t\tEffect: "Allow",\n\t\t\t\t\tResource: "*",\n\t\t\t\t\tAction: "iam:TagInstanceProfile",\n\t\t\t\t\tCondition: {\n\t\t\t\t\t\tStringEquals: {\n\t\t\t\t\t\t\t[`aws:ResourceTag/kubernetes.io/cluster/${variable.eksClusterName}`]: "owned",\n\t\t\t\t\t\t\t"aws:ResourceTag/topology.kubernetes.io/region": `${variable.awsRegion}`,\n\t\t\t\t\t\t\t[`aws:RequestTag/kubernetes.io/cluster/${variable.eksClusterName}`]: "owned",\n\t\t\t\t\t\t\t"aws:RequestTag/topology.kubernetes.io/region": `${variable.awsRegion}`,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tStringLike: {\n\t\t\t\t\t\t\t"aws:ResourceTag/karpenter.k8s.aws/ec2nodeclass": "*",\n\t\t\t\t\t\t\t"aws:RequestTag/karpenter.k8s.aws/ec2nodeclass": "*",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tSid: "AllowScopedInstanceProfileActions",\n\t\t\t\t\tEffect: "Allow",\n\t\t\t\t\tResource: "*",\n\t\t\t\t\tAction: ["iam:AddRoleToInstanceProfile", "iam:RemoveRoleFromInstanceProfile", "iam:DeleteInstanceProfile"],\n\t\t\t\t\tCondition: {\n\t\t\t\t\t\tStringEquals: {\n\t\t\t\t\t\t\t[`aws:ResourceTag/kubernetes.io/cluster/${variable.eksClusterName}`]: "owned",\n\t\t\t\t\t\t\t"aws:ResourceTag/topology.kubernetes.io/region": `${variable.awsRegion}`,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tStringLike: {\n\t\t\t\t\t\t\t"aws:ResourceTag/karpenter.k8s.aws/ec2nodeclass": "*",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tSid: "AllowInstanceProfileReadActions",\n\t\t\t\t\tEffect: "Allow",\n\t\t\t\t\tResource: "*",\n\t\t\t\t\tAction: "iam:GetInstanceProfile",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tSid: "AllowAPIServerEndpointDiscovery",\n\t\t\t\t\tEffect: "Allow",\n\t\t\t\t\tResource: `arn:aws:eks:${variable.awsRegion}:${variable.awsAccountID}:cluster/${variable.eksClusterName}`,\n\t\t\t\t\tAction: "eks:DescribeCluster",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\ttags: {\n\t\t\tName: controllerPolicyName,\n\t\t\t"hits.ai/stack": variable.stackName,\n\t\t},\n\t},\n\t{ protect: true },\n);\n\nnew aws.iam.RolePolicyAttachment(\n\t"karpenter-controller-rpa-0",\n\t{\n\t\tpolicyArn: controllerPolicy.arn,\n\t\trole: controllerRole.name,\n\t},\n\t{ protect: true },\n);\n'})}),"\n",(0,r.jsx)(e.h2,{id:"\uc124\uce58",children:"\uc124\uce58"}),"\n",(0,r.jsx)(e.admonition,{type:"warning",children:(0,r.jsxs)(e.p,{children:["\uc124\uce58 \uc804\uc5d0 ",(0,r.jsx)(e.code,{children:"CoreDNS"}),"\uac00 \uc791\ub3d9\ud558\ub294 \uc9c0 \ud655\uc778\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4."]})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-shell",children:"helm upgrade -i karpenter-crd oci://public.ecr.aws/karpenter/karpenter-crd \\\n    --version v0.33.0 \\\n    --history-max 5 \\\n    -n kube-system\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-shell",children:"helm show values oci://public.ecr.aws/karpenter/karpenter \\\n    --version v0.33.0 \\\n    > karpenter-values.yaml\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",metastring:'title="karpenter-values.yaml"',children:"additionalLabels: {}\n\nserviceAccount:\n  annotations:\n    eks.amazonaws.com/role-arn: arn:aws:iam::<accountId>:role/<controllerRoleName>\n\nreplicas: 1\n\naffinity:\n  nodeAffinity:\n    requiredDuringSchedulingIgnoredDuringExecution:\n      nodeSelectorTerms:\n        - matchExpressions:\n            - key: karpenter.sh/nodepool\n              operator: DoesNotExist\n\ntolerations:\n  - operator: Exists\n\ncontroller:\n  resources:\n    requests:\n      cpu: 50m\n      memory: 512Mi\n    limits:\n      memory: 512Mi\n\nwebhook:\n  # kubernetes 1.25 \ubbf8\ub9cc\uc740 true\ub85c \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4.\n  enabled: false\n\n# ConfigMap: karpenter-global-settings\nsettings:\n  # Pending Pod\uac00 \uc0c8\ub85c \uc0dd\uc131\ub418\uba74 batch\ub97c \ub9cc\ub4e4\ub824\uace0 \uc2dc\ub3c4\ud568\n  # \uc0c8 Pending Pod\uac00 \uc0dd\uae30\uace0 batchIdleDuration \uc2dc\uac04 \ub9cc\ud07c \ub300\uae30\n  # \uadf8 \uc548\uc5d0 \uc0c8\ub85c\uc6b4 Pending Pod\uac00 \uc0dd\uae30\uba74 batch\uc5d0 \ud3ec\ud568 \uc2dc\ud0a4\uace0 \ub2e4\uc2dc batchIdleDuration \uc2dc\uac04 \ub300\uae30\n  # \uc774 \uacfc\uc815\uc774 \ubc18\ubcf5\ub418\ub2e4\uac00 \ub9c8\uc9c0\ub9c9 Pending Pod\uac00 \uc0dd\uae34 \ud6c4 batchIdleDuration\uc744 \ub118\uae30\uac70\ub098\n  # \uccab Pending Pod\uac00 \uc0dd\uae34 \ud6c4 batchMaxDuration\uc744 \ub118\uae30\uba74 batch\ub9cc\ub4e4\uae30 \uc885\ub8cc\n  # https://github.com/aws/karpenter/blob/main/pkg/controllers/provisioning/batcher.go\n  batchMaxDuration: 20s\n  batchIdleDuration: 5s\n\n  clusterName: <clusterName>\n\n  # Rebalance Recommendation/ Spot Interrupt \uc774\ubca4\ud2b8\ub97c \ubc1b\uc744 SQS Queue\n  # \uc124\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 \ud574\ub2f9\uc774\ubca4\ud2b8\ub97c \ucc98\ub9ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n  interruptionQueue: <interruptionQueueName>\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-shell",children:"helm template karpenter oci://public.ecr.aws/karpenter/karpenter \\\n    --version v0.33.0 \\\n    -n kube-system \\\n    -f karpenter-values.yaml \\\n    > karpenter.yaml\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-shell",children:"helm upgrade -i karpenter oci://public.ecr.aws/karpenter/karpenter \\\n    --version v0.33.0 \\\n    --history-max 5 \\\n    -n kube-system \\\n    -f karpenter-values.yaml\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"https://github.com/aws/karpenter/tree/main/pkg/apis/crds",children:"https://github.com/aws/karpenter/tree/main/pkg/apis/crds"})}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: aws-auth\n  namespace: kube-system\ndata:\n  mapRoles: |\n    - rolearn: arn:aws:iam::<accountId>:role/karpenter-ng-role-xxxxx\n      username: system:node:{{EC2PrivateDNSName}}\n      groups:\n        - system:bootstrappers\n        - system:nodes\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\uc5c5\uadf8\ub808\uc774\ub4dc",children:"\uc5c5\uadf8\ub808\uc774\ub4dc"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"https://karpenter.sh/docs/upgrade-guide/",children:"https://karpenter.sh/docs/upgrade-guide/"})}),"\n"]})]})}function u(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(p,{...t})}):p(t)}}}]);