"use strict";(self.webpackChunkwiki_loliot_net=self.webpackChunkwiki_loliot_net||[]).push([[31201],{28453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>t});var s=r(96540);const i={},l=s.createContext(i);function c(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(l.Provider,{value:n},e.children)}},94220:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>u,frontMatter:()=>c,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"linux/linux-kernel/linux-kernel-ftrace","title":"ftrace","description":"ftrace","source":"@site/docs/linux/linux-kernel/linux-kernel-ftrace.mdx","sourceDirName":"linux/linux-kernel","slug":"/linux/linux-kernel/linux-kernel-ftrace","permalink":"/docs/linux/linux-kernel/linux-kernel-ftrace","draft":false,"unlisted":false,"editUrl":"https://github.com/hhk7734/wiki/tree/main/docs/linux/linux-kernel/linux-kernel-ftrace.mdx","tags":[],"version":"current","lastUpdatedAt":1743962785000,"frontMatter":{"id":"linux-kernel-ftrace","title":"ftrace","description":"ftrace","keywords":["kernel","ftrace"]},"sidebar":"linux-kernel","previous":{"title":"Build kernel","permalink":"/docs/linux/linux-kernel/build-linux-kernel"},"next":{"title":"How to contribute","permalink":"/docs/linux/linux-kernel/linux-kernel-how-to-contribute"}}');var i=r(74848),l=r(28453);const c={id:"linux-kernel-ftrace",title:"ftrace",description:"ftrace",keywords:["kernel","ftrace"]},t=void 0,a={},d=[{value:"Linux kernel configuration",id:"linux-kernel-configuration",level:2},{value:"&lt;board&gt;_defconfig",id:"board_defconfig",level:3},{value:"Options",id:"options",level:4},{value:"trace_printk",id:"trace_printk",level:3},{value:"ftrace setup",id:"ftrace-setup",level:2},{value:"ftrace on(restart)/off",id:"ftrace-onrestartoff",level:3},{value:"ftrace event on/off",id:"ftrace-event-onoff",level:3},{value:"set_ftrace_filter",id:"set_ftrace_filter",level:3},{value:"ftrace tracer setup",id:"ftrace-tracer-setup",level:3},{value:"Trace",id:"trace",level:2},{value:"Example",id:"example",level:2},{value:"Linux kernel configuration",id:"linux-kernel-configuration-1",level:3},{value:"&lt;board&gt;_defconfig",id:"board_defconfig-1",level:4},{value:"Linux kernel driver",id:"linux-kernel-driver",level:4},{value:"Build Linux kernel",id:"build-linux-kernel",level:4},{value:"ftrace setup",id:"ftrace-setup-1",level:3},{value:"Trace",id:"trace-1",level:3},{value:"Consequence",id:"consequence",level:3}];function o(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"linux-kernel-configuration",children:"Linux kernel configuration"}),"\n",(0,i.jsxs)(n.p,{children:["Ref: ",(0,i.jsx)(n.a,{href:"https://www.kernel.org/doc/Documentation/trace/ftrace.txt",children:"https://www.kernel.org/doc/Documentation/trace/ftrace.txt"})]}),"\n",(0,i.jsx)(n.h3,{id:"board_defconfig",children:"<board>_defconfig"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"kernel/trace/Kconfig"}),": \uc124\uc815 \uac00\ub2a5\ud55c \uc635\uc158, \uc758\uc874\uc131, \uc124\uba85 \ub4f1\uc774 \uc788\uc73c\ubbc0\ub85c \ucc38\uace0\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4."]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"arch/<architecture>/configs/<board>_defconfig"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"options",children:"Options"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"CONFIG_FTRACE=y"})}),": Enables the kernel tracing infrastructure.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"CONFIG_FUNCTION_TRACER=y"})}),": Enables the kernel to trace every kernel function.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"CONFIG_FUNCTION_GRAPH_TRACER=y"})}),": Enables the kernel to trace a function at both its return and its entry."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"CONFIG_FUNCTION_PROFILER=y"}),': Enables the kernel function profiler. A file is created in debugfs called function_profile_enabled which defaults to zero. When a 1 is echoed into this file profiling begins, and when a zero is entered, profiling stops. A "functions" file is created in the trace_stats directory; this file shows the list of functions that have been hit and their counters.']}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"CONFIG_IRQSOFF_TRACER=y"}),": Measures the time spent in irqs-off critical sections, with microsecond accuracy."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"CONFIG_SCHED_TRACER=y"}),": Tracks the latency of the highest priority task to be scheduled in, starting from the point it has woken up."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"CONFIG_TRACER_SNAPSHOT=y"}),": Allows tracing users to take snapshot of the current buffer using the ftrace interface."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"CONFIG_STACK_TRACER=y"})}),": Records the maximum stack footprint of the kernel and displays it in /sys/kernel/debug/tracing/stack_trace."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"CONFIG_DYNAMIC_FTRACE=y"})}),": This option will modify all the calls to function tracing dynamically (will patch them out of the binary image and replace them with a No-Op instruction) on boot up. During compile time, a table is made of all the locations that ftrace can function trace, and this table is linked into the kernel image. When this is enabled, functions can be individually enabled, and the functions not enabled will not affect performance of the system."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"trace_printk",children:"trace_printk"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"<linux/kernel.h>"}),"\uc5d0 \uc815\uc758\ub418\uc5b4 \uc788\ub294 \ud568\uc218\uc785\ub2c8\ub2e4."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Ftrace introduces a new form of printk() called trace_printk(). It can be used just like printk(), and can also be used in any context (interrupt code, NMI code, and scheduler code). What is nice about trace_printk() is that it does not output to the console. Instead it writes to the Ftrace ring buffer and can be read via the trace file."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"ftrace-setup",children:"ftrace setup"}),"\n",(0,i.jsx)(n.p,{children:"\uc124\uc815\uc744 \uc2dc\uc791\ud558\uae30 \uc804\uc5d0 ftrace\ub97c \ube44\ud65c\uc131\ud654\ud55c \ud6c4 \uc124\uc815\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4."}),"\n",(0,i.jsx)(n.h3,{id:"ftrace-onrestartoff",children:"ftrace on(restart)/off"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"echo 1 > /sys/kernel/debug/tracing/tracing_on && sleep 1\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"echo 0 > /sys/kernel/debug/tracing/tracing_on && sleep 1\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"cat /sys/kernel/debug/tracing/tracing_on\n"})}),"\n",(0,i.jsx)(n.h3,{id:"ftrace-event-onoff",children:"ftrace event on/off"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"echo 1 > /sys/kernel/debug/tracing/events/enable && sleep 1\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"echo 0 > /sys/kernel/debug/tracing/events/enable && sleep 1\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"cat /sys/kernel/debug/tracing/events/enable\n"})}),"\n",(0,i.jsx)(n.h3,{id:"set_ftrace_filter",children:"set_ftrace_filter"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"/sys/kernel/debug/tracing/available_filter_functions"}),"\uc5d0 \ub4f1\ub85d\ub41c \ud568\uc218\ub9cc \ucd94\ucc99 \uac00\ub2a5\ud569\ub2c8\ub2e4."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"cat /sys/kernel/debug/tracing/available_filter_functions\n"})}),"\n",(0,i.jsx)(n.p,{children:"format\uc5d0 \ub530\ub77c \ud568\uc218, \ubaa8\ub4c8 \ub4f1\uc744 \uc120\ud0dd\uc801\uc73c\ub85c \ub4f1\ub85d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,i.jsx)(n.admonition,{type:"danger",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"set_ftrace_filter"}),"\uc5d0 \ud568\uc218\ub97c \ub4f1\ub85d\ud558\uc9c0 \uc54a\uace0 ftrace\uac00 \uc2e4\ud589\ub418\uba74 \ubaa8\ub4e0 \ud568\uc218\ub97c \ucd94\uc801\ud558\uae30 \ub54c\ubb38\uc5d0 \uc2dc\uc2a4\ud15c\uc5d0 ",(0,i.jsx)(n.strong,{children:"\uacfc\ubd80\ud558"}),"\uac00 \uac78\ub824 \uc624\ub3d9\uc791\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"echo <format_1> <format_2> ... > /sys/kernel/debug/tracing/set_ftrace_filter\n"})}),"\n",(0,i.jsxs)(n.p,{children:["format: ",(0,i.jsx)(n.code,{children:"<function>:<command>:<parameter>"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"function"}),"\n",(0,i.jsxs)(n.li,{children:["command","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["mod: \ud568\uc218\ub97c \ubaa8\ub4c8\ub85c \ud544\ud130\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["ex) ",(0,i.jsx)(n.code,{children:":mod:spi_gpio"}),"\ub97c \uc124\uc815\ud558\uba74 spi_gpio \uad00\ub828 \ubaa8\ub4c8 \ub0b4\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ubaa8\ub4e0 \ud568\uc218\ub97c \ucd94\uc801\ud569\ub2c8\ub2e4."]}),"\n",(0,i.jsx)(n.li,{children:"module\uc758 \uacbd\uc6b0 modprobe\ub098 insmod\uc5d0 \uc758\ud574 \ucd94\uac00\ub418\uae30 \uc804\uc5d0 \ub4f1\ub85d\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"traceon/traceoff"}),"\n",(0,i.jsx)(n.li,{children:"snapshot"}),"\n",(0,i.jsx)(n.li,{children:"enable_event/disable_event"}),"\n",(0,i.jsx)(n.li,{children:"dump"}),"\n",(0,i.jsx)(n.li,{children:"cpudump"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"parameter"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"cat /sys/kernel/debug/tracing/set_ftrace_filter\n"})}),"\n",(0,i.jsx)(n.h3,{id:"ftrace-tracer-setup",children:"ftrace tracer setup"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"/sys/kernel/debug/tracing/available_tracers"}),"\uc5d0 \ub4f1\ub85d\ub41c tracer\ub9cc \uc124\uc815 \uac00\ub2a5\ud569\ub2c8\ub2e4."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"cat /sys/kernel/debug/tracing/available_tracers\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"echo <tracer> > /sys/kernel/debug/tracing/current_tracer && sleep 1\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"nop"}),": ftrace event\ub9cc \ucd9c\ub825"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"function"}),": set_ftrace_filter\uc5d0 \ub4f1\ub85d\ub41c \ud568\uc218\ub97c \uc5b4\ub514\uc5d0\uc11c \ud638\ucd9c\ud588\ub294\uc9c0 \ucd9c\ub825"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"function_graph"}),": \ud568\uc218 \uc2e4\ud589 \uc2dc\uac04, \uc138\ubd80 \ud638\ucd9c \uc815\ubcf4 \ucd9c\ub825"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"echo nop > /sys/kernel/debug/tracing/current_tracer && sleep 1\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"echo function > /sys/kernel/debug/tracing/current_tracer && sleep 1\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"echo function_graph > /sys/kernel/debug/tracing/current_tracer && sleep 1\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"cat /sys/kernel/debug/tracing/current_tracer\n"})}),"\n",(0,i.jsx)(n.h2,{id:"trace",children:"Trace"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"cat /sys/kernel/debug/tracing/trace\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"cat /sys/kernel/debug/tracing/trace | head -n <number>\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"cat /sys/kernel/debug/tracing/trace | grep -n -C <number> <function>\n"})}),"\n",(0,i.jsx)(n.p,{children:"tracer\uac00 \ubcc0\uacbd\ub418\uba74 \ucd08\uae30\ud654 \ub429\ub2c8\ub2e4."}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.p,{children:"spidev\uc758 bus \ubc88\ud638\uac00 \uc5b4\ub5bb\uac8c \uc124\uc815\ub418\ub294\uc9c0 \ud655\uc778\ud558\ub294 \ud14c\uc2a4\ud2b8 \uc608\uc81c\uc785\ub2c8\ub2e4. \ud14c\uc2a4\ud2b8\ub294 Hardkernel Odroid-C2\uc5d0\uc11c \uc9c4\ud589\ud588\uc2b5\ub2c8\ub2e4."}),"\n",(0,i.jsx)(n.h3,{id:"linux-kernel-configuration-1",children:"Linux kernel configuration"}),"\n",(0,i.jsx)(n.h4,{id:"board_defconfig-1",children:"<board>_defconfig"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-Makefile",metastring:'title="arch/<architecture>/configs/<board>_defconfig"',children:"CONFIG_FTRACE=y\nCONFIG_FUNCTION_TRACER=y\nCONFIG_FUNCTION_GRAPH_TRACER=y\nCONFIG_STACK_TRACER=y\nCONFIG_DYNAMIC_FTRACE=y\n"})}),"\n",(0,i.jsx)(n.h4,{id:"linux-kernel-driver",children:"Linux kernel driver"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",metastring:'title="driver/spi/spi.c"',children:'int spi_register_master(struct spi_master *master) {\n    ...\n\n    trace_printk("bus_num: %d\\n", master->bus_num);\n    trace_printk("dev.of_node: %d\\n", master->dev.of_node);\n\n    if ((master->bus_num < 0) && master->dev.of_node)\n        master->bus_num = of_alias_get_id(master->dev.of_node, "spi");\n\n    trace_printk("bus_num: %d\\n", master->bus_num);\n\n    /* convention:  dynamically assigned bus IDs count down from the max */\n    if (master->bus_num < 0) {\n        /* FIXME switch to an IDR based scheme, something like\n         * I2C now uses, so we can\'t run out of "dynamic" IDs\n         */\n        master->bus_num = atomic_dec_return(&dyn_bus_id);\n        dynamic = 1;\n    }\n\n    trace_printk("bus_num: %d\\n", master->bus_num);\n\n    ...\n}\nEXPORT_SYMBOL_GPL(spi_register_master);\n'})}),"\n",(0,i.jsx)(n.h4,{id:"build-linux-kernel",children:"Build Linux kernel"}),"\n",(0,i.jsx)(n.h3,{id:"ftrace-setup-1",children:"ftrace setup"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"echo 0 > /sys/kernel/debug/tracing/tracing_on && sleep 1 &&\\\necho 0 > /sys/kernel/debug/tracing/events/enable && sleep 1 &&\\\necho '*spi_*' > /sys/kernel/debug/tracing/set_ftrace_filter && sleep 1 &&\\\necho nop > /sys/kernel/debug/tracing/current_tracer && sleep 1 &&\\\necho function_graph > /sys/kernel/debug/tracing/current_tracer && sleep 1 &&\\\necho 1 > /sys/kernel/debug/tracing/tracing_on && sleep 1\n"})}),"\n",(0,i.jsx)(n.h3,{id:"trace-1",children:"Trace"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"cat /sys/kernel/debug/tracing/trace\n# tracer: function_graph\n#\n# CPU  DURATION                  FUNCTION CALLS\n# |     |   |                     |   |   |   |\n 0) + 47.000 us   |  spi_register_driver();\n ------------------------------------------\n 0)  modprob-1885  =>  modprob-1891\n ------------------------------------------\n\n 0)   4.000 us    |  spi_alloc_master();\n 0)               |  spi_register_master() {\n 0)               |  /* bus_num: -1 */\n 0)               |  /* dev.of_node: 1948176240 */\n 0)               |  /* bus_num: -19 */\n 0)               |  /* bus_num: 32764 */\n 0)   1.000 us    |    spi_start_queue();\n 0)   4.000 us    |    spi_alloc_device();\n ------------------------------------------\n 0)  modprob-1891  =>  spi3276-1893\n ------------------------------------------\n\n 0)   1.000 us    |  spi_pump_messages();\n ------------------------------------------\n 0)  spi3276-1893  =>  modprob-1891\n ------------------------------------------\n\n 0)               |    spi_add_device() {\n 0) + 35.000 us   |      spi_setup();\n 0)   1.000 us    |      spi_uevent();\n 0)   5.000 us    |      spi_match_device();\n 0) ! 131.000 us  |      spi_drv_probe();\n 0) ! 318.000 us  |    }\n 0) ! 3811.000 us |  } /* spi_register_master */\n 1)   2.000 us    |  spi_uevent();\n 1)   2.000 us    |  spi_uevent();\n"})}),"\n",(0,i.jsx)(n.h3,{id:"consequence",children:"Consequence"}),"\n",(0,i.jsxs)(n.p,{children:["\uc218\uc815\ub41c spi.c \ucf54\ub4dc\uc640 trace \ub0b4\uc6a9\uc744 \ube44\uad50\ud574\ubcf4\uba74 bus \ubc88\ud638\uac00 \ucc98\uc74c\ubd80\ud130 \ud560\ub2f9\ub418\uc9c0 \uc54a\uc544 \uc74c\uc218\uc600\uace0, ",(0,i.jsx)(n.code,{children:"of_alias_get_id()"}),"\ud568\uc218 \ud638\ucd9c \ud6c4\uc5d0\ub3c4 \ud560\ub2f9\ub418\uc9c0 \uc54a\uc544 \uc74c\uc218\uc778 \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"/* convention: dynamically assigned bus IDs count down from the max */"})," \ub77c\ub294 \uc8fc\uc11d\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \ub3d9\uc801 \ud560\ub2f9\ub41c bus\ub294 32766, 32765 \ub4f1\uc758 \ubc88\ud638\ub97c \ud560\ub2f9 \ubc1b\uc2b5\ub2c8\ub2e4."]}),"\n",(0,i.jsxs)(n.p,{children:["\uc815\uc801\uc73c\ub85c \ud560\ub2f9\ud574\uc8fc\uae30 \uc704\ud574\uc11c ",(0,i.jsx)(n.code,{children:"of_alias_get_id()"}),"\uc5d0 \uc758\ud574 \ubc88\ud638\ub97c \ud560\ub2f9 \ubc1b\uc744 \uc218 \uc788\uac8c \ud558\uba74 \ub429\ub2c8\ub2e4."]}),"\n",(0,i.jsxs)(n.p,{children:["\uc608\ub97c \ub4e4\uc5b4 bus \ubc88\ud638\ub97c 0\uc73c\ub85c \uc124\uc815\ud558\uace0 \uc2f6\uc740 \uacbd\uc6b0 dts\uc758 spi \ub178\ub4dc\uc5d0 ",(0,i.jsx)(n.code,{children:"spi_0:"})," \uac19\uc740 \ub77c\ubca8\uc744 \ubd99\uc5ec\uc8fc\uace0, aliases\uc5d0 ",(0,i.jsx)(n.code,{children:"spi0 = &spi_0"}),"\ub97c \ucd94\uac00\ud558\uba74 \ub429\ub2c8\ub2e4."]})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}}}]);