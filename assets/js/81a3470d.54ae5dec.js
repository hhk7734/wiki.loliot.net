"use strict";(self.webpackChunkwiki_loliot_net=self.webpackChunkwiki_loliot_net||[]).push([[51805],{11470:(e,n,t)=>{t.d(n,{A:()=>_});var s=t(96540),l=t(34164),r=t(23104),a=t(56347),o=t(205),i=t(57485),c=t(31682),u=t(70679);function d(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:l}}=e;return{value:n,label:t,attributes:s,default:l}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const l=(0,a.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,i.aZ)(r),(0,s.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(l.location.search);n.set(r,e),l.replace({...l.location,search:n.toString()})}),[r,l])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:l}=e,r=h(e),[a,i]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:r}))),[c,d]=m({queryString:t,groupId:l}),[f,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[l,r]=(0,u.Dv)(t);return[l,(0,s.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:l}),y=(()=>{const e=c??f;return p({value:e,tabValues:r})?e:null})();(0,o.A)((()=>{y&&i(y)}),[y]);return{selectedValue:a,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),g(e)}),[d,g,r]),tabValues:r}}var g=t(92303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(74848);function v(e){let{className:n,block:t,selectedValue:s,selectValue:a,tabValues:o}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),u=e=>{const n=e.currentTarget,t=i.indexOf(n),l=o[t].value;l!==s&&(c(n),a(l))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;n=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;n=i[t]??i[i.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>{i.push(e)},onKeyDown:d,onClick:u,...r,className:(0,l.A)("tabs__item",y.tabItem,r?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function x(e){let{lazy:n,children:t,selectedValue:r}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===r));return e?(0,s.cloneElement)(e,{className:(0,l.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function q(e){const n=f(e);return(0,b.jsxs)("div",{className:(0,l.A)("tabs-container",y.tabList),children:[(0,b.jsx)(v,{...n,...e}),(0,b.jsx)(x,{...n,...e})]})}function _(e){const n=(0,g.A)();return(0,b.jsx)(q,{...e,children:d(e.children)},String(n))}},19365:(e,n,t)=>{t.d(n,{A:()=>a});t(96540);var s=t(34164);const l={tabItem:"tabItem_Ymn6"};var r=t(74848);function a(e){let{children:n,hidden:t,className:a}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,s.A)(l.tabItem,a),hidden:t,children:n})}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(96540);const l={},r=s.createContext(l);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),s.createElement(r.Provider,{value:n},e.children)}},33693:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"lang/python/libraries/sqlalchemy/sqlalchemy","title":"SQLAlchemy","description":"SQLAlchemy","source":"@site/docs/lang/python/libraries/sqlalchemy/sqlalchemy.mdx","sourceDirName":"lang/python/libraries/sqlalchemy","slug":"/lang/python/libraries/sqlalchemy/","permalink":"/docs/lang/python/libraries/sqlalchemy/","draft":false,"unlisted":false,"editUrl":"https://github.com/hhk7734/wiki/tree/main/docs/lang/python/libraries/sqlalchemy/sqlalchemy.mdx","tags":[],"version":"current","lastUpdatedAt":1740938070000,"frontMatter":{"id":"sqlalchemy","title":"SQLAlchemy","sidebar_label":"SQLAlchemy","description":"SQLAlchemy","keywords":["sqlalchemy"]},"sidebar":"python","previous":{"title":"gRPC","permalink":"/docs/lang/python/libraries/grpc/"},"next":{"title":"Atlas","permalink":"/docs/lang/python/libraries/sqlalchemy/atlas"}}');var l=t(74848),r=t(28453),a=t(11470),o=t(19365);const i={id:"sqlalchemy",title:"SQLAlchemy",sidebar_label:"SQLAlchemy",description:"SQLAlchemy",keywords:["sqlalchemy"]},c=void 0,u={},d=[{value:"\uc124\uce58",id:"\uc124\uce58",level:2},{value:"Engine \uc0dd\uc131",id:"engine-\uc0dd\uc131",level:2},{value:"Session \uc0dd\uc131",id:"session-\uc0dd\uc131",level:2}];function h(e){const n={a:"a",code:"code",h2:"h2",li:"li",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://docs.sqlalchemy.org/en/20",children:"SQLAlchemy 2.0 Docs"})}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"\uc124\uce58",children:"\uc124\uce58"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"python3 -m pip install sqlalchemy\n"})}),"\n",(0,l.jsxs)(a.A,{groupId:"db",defaultValue:"postgresql",values:[{label:"PostgreSQL",value:"postgresql"},{label:"MySQL",value:"mysql"}],children:[(0,l.jsx)(o.A,{value:"postgresql",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"python3 -m pip install psycopg[binary]\n"})})}),(0,l.jsx)(o.A,{value:"mysql",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"python3 -m pip install pymysql\n"})})})]}),"\n",(0,l.jsx)(n.h2,{id:"engine-\uc0dd\uc131",children:"Engine \uc0dd\uc131"}),"\n",(0,l.jsxs)(a.A,{groupId:"db",defaultValue:"postgresql",values:[{label:"PostgreSQL",value:"postgresql"},{label:"MySQL",value:"mysql"}],children:[(0,l.jsx)(o.A,{value:"postgresql",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'from pydantic import Field\nfrom pydantic_settings import BaseSettings, SettingsConfigDict\nfrom sqlalchemy import Engine\nfrom sqlalchemy import create_engine as _create_engine\n\n\nclass DBConfig(BaseSettings):\n    host: str = "localhost"\n    port: int = 5432\n    user: str = "postgres"\n    password: str = Field(exclude=True)\n    database: str\n    connection_options: str | None = None\n\n    model_config = SettingsConfigDict(env_prefix="db_", env_file=(".env", ".env.local"), extra="ignore")\n\n    def to_url(self) -> str:\n        url = f"postgresql+psycopg://{self.user}:{self.password}@{self.host}:{self.port}/{self.database}"\n        if self.connection_options:\n            url += f"?{self.connection_options}"\n        return url\n\n\ndef create_engine(config: DBConfig) -> Engine:\n    return _create_engine(config.to_url())\n'})})}),(0,l.jsx)(o.A,{value:"mysql",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'from pydantic import Field\nfrom pydantic_settings import BaseSettings, SettingsConfigDict\nfrom sqlalchemy import Engine\nfrom sqlalchemy import create_engine as _create_engine\n\n\nclass DBConfig(BaseSettings):\n    host: str = "localhost"\n    port: int = 3306\n    user: str = "root"\n    password: str = Field(exclude=True)\n    database: str\n    connection_options: str | None = None\n\n    model_config = SettingsConfigDict(env_prefix="db_", env_file=(".env", ".env.local"), extra="ignore")\n\n    def to_url(self) -> str:\n        url = f"mysql+pymysql://{self.user}:{self.password}@{self.host}:{self.port}/{self.database}"\n        if self.connection_options:\n            url += f"?{self.connection_options}"\n        return url\n\n\ndef create_engine(config: DBConfig) -> Engine:\n    return _create_engine(config.to_url())\n'})})})]}),"\n",(0,l.jsx)(n.h2,{id:"session-\uc0dd\uc131",children:"Session \uc0dd\uc131"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://docs.sqlalchemy.org/en/20/orm/session_basics.html",children:"SQLAlchemy 2.0: Session Basics"})}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"# from sqlalchemy.orm import Session\nfrom sqlalchemy.orm import sessionmaker\n\n\nengine = create_engine(DBConfig())\n# Session == sessionmaker(engine)\nSessionLocal = sessionmaker(engine, autocommit=False, autoflush=False)\n\n# session\uc744 \uc5f4\uace0, \ub2eb\uc74c\nwith SessionLocal() as session:\n    ...\n\nwith SessionLocal() as session:\n    # \uc5d0\ub7ec \ubc1c\uc0dd \uc2dc rollback, \uc131\uacf5 \uc2dc commit\n    with session.begin()\n        ...\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}}}]);