"use strict";(self.webpackChunkwiki_loliot_net=self.webpackChunkwiki_loliot_net||[]).push([[50552],{16453:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>t,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"linux/linux-uboot/uboot-configuration","title":"u-boot configuration","description":"u-boot configuration","source":"@site/docs/linux/linux-uboot/uboot-configuration.mdx","sourceDirName":"linux/linux-uboot","slug":"/linux/linux-uboot/uboot-configuration","permalink":"/docs/linux/linux-uboot/uboot-configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/hhk7734/wiki/tree/main/docs/linux/linux-uboot/uboot-configuration.mdx","tags":[],"version":"current","lastUpdatedAt":1745336627000,"frontMatter":{"id":"uboot-configuration","title":"u-boot configuration","sidebar_label":"Configuration","description":"u-boot configuration","keywords":["u-boot","configuration"]},"sidebar":"linux-uboot","previous":{"title":"Custom command","permalink":"/docs/linux/linux-uboot/uboot-custom-command"}}');var c=o(74848),r=o(28453);const t={id:"uboot-configuration",title:"u-boot configuration",sidebar_label:"Configuration",description:"u-boot configuration",keywords:["u-boot","configuration"]},s=void 0,d={},l=[{value:"Tips to add/remove boards",id:"tips-to-addremove-boards",level:2},{value:"Etc",id:"etc",level:2},{value:"CONFIG_SYS_CPU=",id:"config_sys_cpu",level:3},{value:"CONFIG_SYS_SOC=",id:"config_sys_soc",level:3},{value:"CONFIG_SYS_VENDOR=",id:"config_sys_vendor",level:3},{value:"CONFIG_SYS_BOARD=",id:"config_sys_board",level:3},{value:"CONFIG_SYS_CONFIG_NAME=",id:"config_sys_config_name",level:3},{value:"Reference",id:"reference",level:2}];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"target: Odroid-N2"}),"\n",(0,c.jsx)(n.li,{children:"tag: v2019.07"}),"\n"]}),"\n",(0,c.jsx)(n.h2,{id:"tips-to-addremove-boards",children:"Tips to add/remove boards"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:'When adding a new board, the following steps are generally needed:\n\n [1] Add a header file include/configs/<target>.h\n [2] Make sure to define necessary CONFIG_SYS_* in Kconfig:\n       Define CONFIG_SYS_CPU="cpu" to compile arch/<arch>/cpu/<cpu>\n       Define CONFIG_SYS_SOC="soc" to compile arch/<arch>/cpu/<cpu>/<soc>\n       Define CONFIG_SYS_VENDOR="vendor" to compile board/<vendor>/common/*\n         and board/<vendor>/<board>/*\n       Define CONFIG_SYS_BOARD="board" to compile board/<board>/*\n         (or board/<vendor>/<board>/* if CONFIG_SYS_VENDOR is defined)\n       Define CONFIG_SYS_CONFIG_NAME="target" to include\n         include/configs/<target>.h\n [3] Add a new entry to the board select menu in Kconfig.\n     The board select menu is located in arch/<arch>/Kconfig or\n     arch/<arch>/*/Kconfig.\n [4] Add a MAINTAINERS file\n     It is generally placed at board/<board>/MAINTAINERS or\n     board/<vendor>/<board>/MAINTAINERS\n [5] Add configs/<target>_defconfig\n\nWhen removing an obsolete board, the following steps are generally needed:\n\n [1] Remove configs/<target>_defconfig\n [2] Remove include/configs/<target>.h if it is not used by any other boards\n [3] Remove board/<vendor>/<board>/* or board/<board>/* if it is not used\n     by any other boards\n [4] Update MAINTAINERS if necessary\n [5] Remove the unused entry from the board select menu in Kconfig\n [6] Add an entry to doc/README.scrapyard\n'})}),"\n",(0,c.jsx)(n.p,{children:"Configuration files for use in C sources"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"include/generated/autoconf.h"})," (generated by Kconfig for Normal)"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"include/configs/<board>.h"})," (exists for all boards)"]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"Configuration file for use in makefiles"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"include/config/auto.conf"})," (generated by Kconfig)"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"include/autoconf.mk"})," (generated by the old config for Normal)"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"spl/include/autoconfig.mk"})," (generated by the old config for SPL)"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"tpl/include/autoconfig.mk"})," (generated by the old config for TPL)"]}),"\n"]}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsx)(n.p,{children:"When adding a new CONFIG macro, it is highly recommended to add it to Kconfig\nrather than to a header file."}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["CONFIG_SYS_CONFIG_NAME\uc744 \uc124\uc815\ud558\uba74 u-boot \ubd80\ud305\uc2dc ",(0,c.jsx)(n.code,{children:"u-boot/include/configs/<CONFIG_SYS_CONFIG_NAME>.h"}),"\uc640 \uc544\ub798 \ud30c\uc77c \ub4e4\uc744 \ud30c\uc2f1\ud558\uc5ec \uc2e4\ud589\ub429\ub2c8\ub2e4."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-makefile",metastring:'title="u-boot/scripts/kconfig/Makefile"',children:"SRCARCH := ..\n\n%_defconfig: $(obj)/conf\n    $(Q)$< $(silent) --defconfig=arch/$(SRCARCH)/configs/$@ $(Kconfig)\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-text",metastring:'title="u-boot/scripts/Makefile.autoconf"',children:"# SPDX-License-Identifier: GPL-2.0\n# This helper makefile is used for creating\n#  - symbolic links (arch/$ARCH/include/asm/arch\n#  - include/autoconf.mk, {spl,tpl}/include/autoconf.mk\n#  - include/config.h\n#\n# When our migration to Kconfig is done\n# (= When we move all CONFIGs from header files to Kconfig)\n# this makefile can be deleted.\n"})}),"\n",(0,c.jsx)(n.h2,{id:"etc",children:"Etc"}),"\n",(0,c.jsx)(n.h3,{id:"config_sys_cpu",children:"CONFIG_SYS_CPU="}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"./config.mk:43:CPUDIR=arch/$(ARCH)/cpu$(if $(CPU),/$(CPU),)\n./scripts/Makefile.autoconf:130:  dest=arch/$(ARCH)/include/asm/arch-$(if $(SOC),$(SOC),$(CPU))\n"})}),"\n",(0,c.jsx)(n.h3,{id:"config_sys_soc",children:"CONFIG_SYS_SOC="}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"## If arch/$(ARCH)/mach-$(SOC)/include/mach exists,\n## make a symbolic link to that directory.\n## Otherwise, create a symbolic link to arch/$(ARCH)/include/asm/arch-$(SOC).\n"})}),"\n",(0,c.jsx)(n.h3,{id:"config_sys_vendor",children:"CONFIG_SYS_VENDOR="}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"./config.mk:53:BOARDDIR = $(VENDOR)/$(BOARD)\n./scripts/Makefile.spl:69:HAVE_VENDOR_COMMON_LIB = $(if $(wildcard $(srctree)/board/$(VENDOR)/common/Makefile),y,n)\n./scripts/Makefile.autoconf:106: echo \\#define CONFIG_BOARDDIR board/$(if $(VENDOR),$(VENDOR)/)$(BOARD);\\\n"})}),"\n",(0,c.jsx)(n.h3,{id:"config_sys_board",children:"CONFIG_SYS_BOARD="}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"./include/common.h:156:/* $(BOARD)/$(BOARD).c */\n./include/common.h:160:/* $(BOARD)/eeprom.c */\n./include/common.h:179:/* $(BOARD)/$(BOARD).c */\n./scripts/Makefile.spl:212:ALL-y        += $(obj)/$(BOARD)-spl.bin\n./scripts/Makefile.spl:325:$(obj)/$(BOARD)-spl.bin: $(obj)/u-boot-spl.bin\n./scripts/Makefile.spl:326:     $(if $(wildcard $(objtree)/spl/board/samsung/$(BOARD)/tools/mk$(BOARD)spl),\\\n./scripts/Makefile.spl:327:     $(objtree)/spl/board/samsung/$(BOARD)/tools/mk$(BOARD)spl,\\\n./scripts/Makefile.autoconf:106:        echo \\#define CONFIG_BOARDDIR board/$(if $(VENDOR),$(VENDOR)/)$(BOARD);\\\n"})}),"\n",(0,c.jsx)(n.h3,{id:"config_sys_config_name",children:"CONFIG_SYS_CONFIG_NAME="}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"./arch/Kconfig:276:       The header file include/configs/<CONFIG_SYS_CONFIG_NAME>.h\n./arch/arm/mach-meson/Kconfig:87:config SYS_CONFIG_NAME\n./arch/arm/mach-meson/Kconfig:92:         Based on this option include/configs/<CONFIG_SYS_CONFIG_NAME>.h header\n./scripts/Makefile.autoconf:109:        echo \\#include \\<configs/$(CONFIG_SYS_CONFIG_NAME).h\\>;\n"})}),"\n",(0,c.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"https://gitlab.denx.de/u-boot/u-boot/-/blob/master/doc/README.kconfig",children:"https://gitlab.denx.de/u-boot/u-boot/-/blob/master/doc/README.kconfig"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>t,x:()=>s});var i=o(96540);const c={},r=i.createContext(c);function t(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:t(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);