"use strict";(self.webpackChunkwiki_loliot_net=self.webpackChunkwiki_loliot_net||[]).push([[64168],{28453:(e,t,r)=>{r.d(t,{R:()=>l,x:()=>s});var n=r(96540);const o={},i=n.createContext(o);function l(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),n.createElement(i.Provider,{value:t},e.children)}},35959:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"lang/go/libraries/websocket","title":"WebSocket","description":"WebSocket","source":"@site/docs/lang/go/libraries/websocket.mdx","sourceDirName":"lang/go/libraries","slug":"/lang/go/libraries/websocket","permalink":"/docs/lang/go/libraries/websocket","draft":false,"unlisted":false,"editUrl":"https://github.com/hhk7734/wiki/tree/main/docs/lang/go/libraries/websocket.mdx","tags":[],"version":"current","lastUpdatedAt":1678442914000,"frontMatter":{"id":"websocket","title":"WebSocket","sidebar_label":"WebSocket","description":"WebSocket","keywords":["websocket"]},"sidebar":"go","previous":{"title":"Session","permalink":"/docs/lang/go/libraries/session"},"next":{"title":"Reverse Proxy","permalink":"/docs/lang/go/libraries/reverse-proxy"}}');var o=r(74848),i=r(28453);const l={id:"websocket",title:"WebSocket",sidebar_label:"WebSocket",description:"WebSocket",keywords:["websocket"]},s=void 0,a={},c=[{value:"Server",id:"server",level:2},{value:"Client",id:"client",level:2},{value:"Proxy",id:"proxy",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",li:"li",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"/docs/lang/design/protocol/http/websocket",children:"WebSocket"})}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"server",children:"Server"}),"\n",(0,o.jsx)(t.h2,{id:"client",children:"Client"}),"\n",(0,o.jsx)(t.h2,{id:"proxy",children:"Proxy"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",children:'import (\n\t"errors"\n\t"fmt"\n\t"io"\n\t"net/http"\n\t"net/url"\n\n\t"github.com/gin-gonic/gin"\n\t"github.com/gobwas/ws"\n)\n\nfunc WebsocketProxy(c *gin.Context) {\n\tconnClient, _, _, err := ws.UpgradeHTTP(c.Request, c.Writer)\n\tif err != nil {\n\t\tc.Status(http.StatusInternalServerError)\n\t\treturn\n\t}\n\tdefer connClient.Close()\n\n\tu, _ := url.Parse("ws://websocket.default.svc.cluster.local:8080/ws")\n\tu.RawQuery = c.Request.URL.RawQuery\n\n\tdial := ws.Dialer{}\n\tdialHeader := http.Header{}\n\tdial.Header = ws.HandshakeHeaderHTTP(dialHeader)\n\n\tconnServer, _, _, err := dial.Dial(c.Request.Context(), u.String())\n\tif err != nil {\n\t\tc.Status(http.StatusInternalServerError)\n\t\treturn\n\t}\n\tdefer connServer.Close()\n\n\terrClient := make(chan error, 1)\n\terrServer := make(chan error, 1)\n\n\tgo func() {\n\t\tfor {\n\t\t\theader, err := ws.ReadHeader(connClient)\n\t\t\tif err != nil {\n\t\t\t\terrClient <- err\n\t\t\t}\n\n\t\t\tpayload := make([]byte, header.Length)\n\t\t\t_, err = io.ReadFull(connClient, payload)\n\t\t\tif err != nil {\n\t\t\t\terrClient <- err\n\t\t\t}\n\n\t\t\tif err := ws.WriteHeader(connServer, header); err != nil {\n\t\t\t\terrServer <- err\n\t\t\t}\n\n\t\t\tif _, err := connServer.Write(payload); err != nil {\n\t\t\t\terrServer <- err\n\t\t\t}\n\n\t\t\tif header.OpCode == ws.OpClose {\n\t\t\t\terrServer <- errConnectionClose\n\t\t\t}\n\t\t}\n\t}()\n\n\tgo func() {\n\t\tfor {\n\t\t\theader, err := ws.ReadHeader(connServer)\n\t\t\tif err != nil {\n\t\t\t\terrServer <- err\n\t\t\t}\n\n\t\t\tpayload := make([]byte, header.Length)\n\t\t\t_, err = io.ReadFull(connServer, payload)\n\t\t\tif err != nil {\n\t\t\t\terrServer <- err\n\t\t\t}\n\n\t\t\tif err := ws.WriteHeader(connClient, header); err != nil {\n\t\t\t\terrClient <- err\n\t\t\t}\n\n\t\t\tif _, err := connClient.Write(payload); err != nil {\n\t\t\t\terrClient <- err\n\t\t\t}\n\n\t\t\tif header.OpCode == ws.OpClose {\n\t\t\t\terrClient <- errConnectionClose\n\t\t\t}\n\t\t}\n\t}()\n\n\tselect {\n\tcase err = <-errClient:\n\t\terr = fmt.Errorf("client: %w", err)\n\tcase err = <-errServer:\n\t\terr = fmt.Errorf("server: %w", err)\n\t}\n\n\tif errors.Is(err, errConnectionClose) {\n\t\treturn\n\t} else {\n\t\tc.Status(http.StatusInternalServerError)\n\t\tc.Error(err)\n\t}\n}\n'})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);