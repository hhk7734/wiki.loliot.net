"use strict";(self.webpackChunkwiki_loliot_net=self.webpackChunkwiki_loliot_net||[]).push([[24775],{28453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>o});var s=a(96540);const i={},l=s.createContext(i);function r(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(l.Provider,{value:n},e.children)}},96905:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"mlops/provisioning/keda/keda","title":"KEDA \uc124\uce58 \uac00\uc774\ub4dc","description":"KEDA \uc124\uce58 \uac00\uc774\ub4dc","source":"@site/docs/mlops/provisioning/keda/keda.mdx","sourceDirName":"mlops/provisioning/keda","slug":"/mlops/provisioning/keda/","permalink":"/docs/mlops/provisioning/keda/","draft":false,"unlisted":false,"editUrl":"https://github.com/hhk7734/wiki/tree/main/docs/mlops/provisioning/keda/keda.mdx","tags":[],"version":"current","lastUpdatedAt":1760376324000,"frontMatter":{"id":"keda","title":"KEDA \uc124\uce58 \uac00\uc774\ub4dc","sidebar_label":"\uc124\uce58 \uac00\uc774\ub4dc","description":"KEDA \uc124\uce58 \uac00\uc774\ub4dc","keywords":["keda","provisioning"]},"sidebar":"provisioning","previous":{"title":"VirtualMachine \uc0dd\uc131","permalink":"/docs/mlops/provisioning/kubevirt/virtualmachine"},"next":{"title":"CRD \uc548\ub0b4","permalink":"/docs/mlops/provisioning/keda/crd"}}');var i=a(74848),l=a(28453),r=a(98180);const o={id:"keda",title:"KEDA \uc124\uce58 \uac00\uc774\ub4dc",sidebar_label:"\uc124\uce58 \uac00\uc774\ub4dc",description:"KEDA \uc124\uce58 \uac00\uc774\ub4dc",keywords:["keda","provisioning"]},d=void 0,t={},c=[{value:"\uc124\uce58",id:"\uc124\uce58",level:2},{value:"\uc0ad\uc81c",id:"\uc0ad\uc81c",level:2}];function h(e){const n={a:"a",code:"code",h2:"h2",pre:"pre",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("center",{children:(0,i.jsxs)("figure",{children:[(0,i.jsx)("img",{src:(0,r.Ay)("img/mlops/provisioning/keda/architecture.png")}),(0,i.jsx)("figcaption",{children:(0,i.jsx)(n.a,{href:"https://keda.sh/docs/concepts/#architecture",children:"KEDA Architecture"})})]})}),"\n",(0,i.jsx)(n.h2,{id:"\uc124\uce58",children:"\uc124\uce58"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"helm repo add kedacore https://kedacore.github.io/charts\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"helm repo update kedacore \\\n&& helm search repo kedacore/keda -l | head -n 10\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"helm pull kedacore/keda --version 2.18.0\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"helm show values kedacore/keda --version 2.18.0 > keda-2.18.0.yaml\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="keda-values.yaml"',children:"additionalLabels: {}\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"helm template keda kedacore/keda \\\n    --version 2.18.0 \\\n    -n keda \\\n    -f keda-values.yaml \\\n    > keda.yaml\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"helm upgrade keda kedacore/keda \\\n    --install \\\n    --history-max 5 \\\n    --version 2.18.0 \\\n    -n keda \\\n    -f keda-values.yaml\n"})}),"\n",(0,i.jsx)(n.h2,{id:"\uc0ad\uc81c",children:"\uc0ad\uc81c"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"helm uninstall -n keda keda\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"kubectl get crd -oname | grep --color=never 'keda.sh' | xargs kubectl delete\n"})})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);