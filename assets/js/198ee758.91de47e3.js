"use strict";(self.webpackChunkwiki_loliot_net=self.webpackChunkwiki_loliot_net||[]).push([[64951],{28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>i});var l=t(96540);const s={},o=l.createContext(s);function c(e){const n=l.useContext(o);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),l.createElement(o.Provider,{value:n},e.children)}},30939:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>l,toc:()=>a});const l=JSON.parse('{"id":"lang/python/libraries/python-pybluez","title":"Python pybluez","description":"Python pybluez","source":"@site/docs/lang/python/libraries/python-pybluez.mdx","sourceDirName":"lang/python/libraries","slug":"/lang/python/libraries/python-pybluez","permalink":"/docs/lang/python/libraries/python-pybluez","draft":false,"unlisted":false,"editUrl":"https://github.com/hhk7734/wiki/tree/main/docs/lang/python/libraries/python-pybluez.mdx","tags":[],"version":"current","lastUpdatedAt":1620402911000,"frontMatter":{"id":"python-pybluez","title":"Python pybluez","sidebar_label":"pybluez","description":"Python pybluez","keywords":["Python","pybluez"]},"sidebar":"python","previous":{"title":"Histogram","permalink":"/docs/lang/python/libraries/opencv/opencv-histogram"},"next":{"title":"Installation","permalink":"/docs/lang/python/libraries/pyside2/pyside2-installation"}}');var s=t(74848),o=t(28453);const c={id:"python-pybluez",title:"Python pybluez",sidebar_label:"pybluez",description:"Python pybluez",keywords:["Python","pybluez"]},i=void 0,r={},a=[{value:"socket",id:"socket",level:2},{value:"pybluez \uc124\uce58",id:"pybluez-\uc124\uce58",level:2},{value:"BLE \ucd94\uac00 \uc124\uce58",id:"ble-\ucd94\uac00-\uc124\uce58",level:3},{value:"bluetooth.service \ubcc0\uacbd",id:"bluetoothservice-\ubcc0\uacbd",level:3},{value:"\ube14\ub8e8\ud22c\uc2a4 \ucee8\ud2b8\ub864\ub7ec",id:"\ube14\ub8e8\ud22c\uc2a4-\ucee8\ud2b8\ub864\ub7ec",level:2},{value:"bluetoothctl",id:"bluetoothctl",level:3},{value:"Examples",id:"examples",level:2},{value:"server - client",id:"server---client",level:3},{value:"server",id:"server",level:4},{value:"client",id:"client",level:4},{value:"\uc1a1\uc218\uc2e0 \uc4f0\ub808\ub4dc",id:"\uc1a1\uc218\uc2e0-\uc4f0\ub808\ub4dc",level:3},{value:"Reference",id:"reference",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"socket",children:"socket"}),"\n",(0,s.jsx)(n.p,{children:"\ud30c\uc774\uc36c\uc5d0 \uae30\ubcf8 \ub0b4\uc7a5\ub418\uc5b4\uc788\ub294 socket \ubaa8\ub4c8\uc744 \ud1b5\ud574 \uac04\ub2e8\ud55c \ube14\ub8e8\ud22c\uc2a4 \ud1b5\uc2e0\uc744 \uad6c\ucd95 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,s.jsx)(n.p,{children:"\ub2e8 \ucc38\uace0\ud560 \ubb38\uc11c\uac00 \uac70\uc758 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \ub2e8\uc21c \ud1b5\uc2e0 \uae30\ub2a5 \uc678\uc5d0\ub294 \ud504\ub85c\uadf8\ub7a8 \uac1c\ubc1c\uc774 \uc5b4\ub824\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,s.jsx)(n.h2,{id:"pybluez-\uc124\uce58",children:"pybluez \uc124\uce58"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"sudo apt install -y bluez bluetooth libbluetooth-dev python3-pip \\\n&& python3 -m pip install pybluez\n"})}),"\n",(0,s.jsx)(n.h3,{id:"ble-\ucd94\uac00-\uc124\uce58",children:"BLE \ucd94\uac00 \uc124\uce58"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"sudo apt install -y pkg-config libboost-python-dev \\\n    libboost-thread-dev libglib2.0-dev python3-dev \\\n&& python3 -m pip install pybluez\\[ble\\]\n"})}),"\n",(0,s.jsx)(n.h3,{id:"bluetoothservice-\ubcc0\uacbd",children:"bluetooth.service \ubcc0\uacbd"}),"\n",(0,s.jsxs)(n.p,{children:["\uc2e4\ud589 \uc635\uc158\uc73c\ub85c ",(0,s.jsx)(n.code,{children:"-C"}),"(--compat)\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",metastring:"{1}",children:"$ sudo vim /lib/systemd/system/bluetooth.service\n...\nExecStart=/usr/lib/bluetooth/bluetoothd -C\n...\n"})}),"\n",(0,s.jsx)(n.p,{children:"SDP: Service Discovery Protocol"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"echo -e '\\nsudo chmod 777 /var/run/sdp' >> ~/.bashrc\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"sudo reboot\n"})}),"\n",(0,s.jsx)(n.h2,{id:"\ube14\ub8e8\ud22c\uc2a4-\ucee8\ud2b8\ub864\ub7ec",children:"\ube14\ub8e8\ud22c\uc2a4 \ucee8\ud2b8\ub864\ub7ec"}),"\n",(0,s.jsx)(n.p,{children:"\uc544\ub798 \uba85\ub839\uc744 \ud1b5\ud574 \ube14\ub8e8\ud22c\uc2a4 \uc7a5\uce58\uba85\uacfc MAC \uc8fc\uc18c\ub97c \ud655\uc778\ud569\ub2c8\ub2e4."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",metastring:"{1}",children:"$ hcitool dev\nDevices:\n    hci0    00:1A:7D:DA:71:13\n"})}),"\n",(0,s.jsx)(n.p,{children:"\uc544\ub798 \uba85\ub839\uc744 \ud1b5\ud574 \ube14\ub8e8\ud22c\uc2a4 \uc7a5\uce58\uc778 hci0\uc758 \uc2a4\uce94\uc744 \ud5c8\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"sudo hciconfig hci0 piscan\n"})}),"\n",(0,s.jsx)(n.h3,{id:"bluetoothctl",children:"bluetoothctl"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"bluetoothctl"})," \uba85\ub839\uc5b4\ub97c \ud1b5\ud574 \ube14\ub8e8\ud22c\uc2a4 \uc7a5\uce58\ub97c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",metastring:"{1}",children:"$ bluetoothctl\n[NEW] Controller 18:1D:EA:36:DA:89 hhk7734 [default]\nAgent registered\n[bluetooth]# help\nMenu main:\nAvailable commands:\n-------------------\nadvertise                   Advertise Options Submenu\nscan                        Scan Options Submenu\ngatt                        Generic Attribute Submenu\nlist                        List available controllers\nshow [ctrl]                 Controller information\nselect <ctrl>               Select default controller\ndevices                     List available devices\npaired-devices              List paired devices\nsystem-alias <name>         Set controller alias\nreset-alias                 Reset controller alias\npower <on/off>              Set controller power\npairable <on/off>           Set controller pairable mode\ndiscoverable <on/off>       Set controller discoverable mode\nagent <on/off/capability>   Enable/disable agent with given capability\ndefault-agent               Set agent as the default one\nadvertise <on/off/type>     Enable/disable advertising with given type\nset-alias <alias>           Set device alias\nscan <on/off>               Scan for devices\ninfo [dev]                  Device information\npair [dev]                  Pair with device\ntrust [dev]                 Trust device\nuntrust [dev]               Untrust device\nblock [dev]                 Block device\nunblock [dev]               Unblock device\nremove <dev>                Remove device\nconnect <dev>               Connect device\ndisconnect [dev]            Disconnect device\nmenu <name>                 Select submenu\nversion                     Display version\nquit                        Quit program\nexit                        Quit program\nhelp                        Display help about this program\n[bluetooth]#\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["\uc815\ubcf4\uac00 \uc548\ub098\uc624\uba74 ",(0,s.jsx)(n.code,{children:"sudo bluetoothctl"})," \uba85\ub839\uc5b4\ub97c \ud1b5\ud574 \ube14\ub8e8\ud22c\uc2a4 \uc7a5\uce58\ub97c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."]})}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.h3,{id:"server---client",children:"server - client"}),"\n",(0,s.jsx)(n.h4,{id:"server",children:"server"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import bluetooth\nimport signal\nimport sys\n\nHOST = ""  # \'\ube14\ub8e8\ud22c\uc2a4 \ucee8\ud2b8\ub864\ub7ec \ub9e5 \uc8fc\uc18c\'\ub97c \uc9c1\uc811 \uc785\ub825\ud574\ub3c4 \ub428\nPORT = bluetooth.PORT_ANY\nUUID = "94f39d29-7d6d-437d-973b-fba39e49d4ee"\n\n\ndef signal_handler(sig, frame):\n    try:\n        connected_socket.close()\n\n    except:\n        pass\n\n    server_socket.close()\n    sys.exit()\n\n\nsignal.signal(signal.SIGINT, signal_handler)\n\n# \ube14\ub8e8\ud22c\uc2a4 \uc11c\ubc84 \uc18c\ucf13 \uc0dd\uc131\nserver_socket = bluetooth.BluetoothSocket(bluetooth.RFCOMM)\nserver_socket.bind((HOST, PORT))\nserver_socket.listen(1)\n\nport = server_socket.getsockname()[1]\nprint("\ud3ec\ud2b8 :", port)\n\n# \ube14\ub8e8\ud22c\uc2a4 \uc11c\ube44\uc2a4 advertise\nbluetooth.advertise_service(\n    server_socket,\n    name="server",\n    service_id=UUID,\n    service_classes=[UUID, bluetooth.SERIAL_PORT_CLASS],\n    profiles=[bluetooth.SERIAL_PORT_PROFILE],\n)\n\n# \ud074\ub77c\uc774\uc5b8\ud2b8 \uc811\uc18d \ub300\uae30\nconnected_socket, client_address = server_socket.accept()\n\ntry:\n    while True:\n        data = connected_socket.recv(1024)\n        print("client : ", data)\n        connected_socket.send(data)\n\nexcept:\n    pass\n\nconnected_socket.close()\nserver_socket.close()\n'})}),"\n",(0,s.jsx)(n.h4,{id:"client",children:"client"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import bluetooth\nimport signal\nimport sys\n\n# \uc11c\ubc84 \uc815\ubcf4\nHOST = \"\"  # \ube14\ub8e8\ud22c\uc2a4 \ucee8\ud2b8\ub864\ub7ec \ub9e5 \uc8fc\uc18c\nUUID = \"94f39d29-7d6d-437d-973b-fba39e49d4ee\"\n\n\ndef signal_handler(sig, frame):\n    client_socket.close()\n    sys.exit()\n\n\nsignal.signal(signal.SIGINT, signal_handler)\n\n# port\ub294 \ubaa8\ub974\uace0 name\uc774\ub098 uuid\ub97c \uc544\ub294 \uacbd\uc6b0\n# address \ub97c \uc124\uc815\ud558\uace0 \ub098\uba38\uc9c0\ub97c None\uc73c\ub85c \ud558\ub294 \uacbd\uc6b0 \uacb0\uacfc\uac00 \uc5ec\ub7ec\uac1c \ub098\uc62c \uc218 \uc788\uc74c\n# name=None\uc740 None\uc778 \uacb0\uacfc\ub97c \ucc3e\ub294 \uac83\uc774 \uc544\ub2d8. None\uc774 \uc544\ub2c8\ub354\ub77c\ub3c4 \ub098\uba38\uc9c0 \uc815\ubcf4\ub9cc \uc77c\uce58\ud558\uba74 \uacb0\uacfc\uc5d0 \ud3ec\ud568 \ub428\n# \uacb0\uacfc\ub294, 'host', 'name', 'description', 'provider',\n# 'protocol', 'service-classes', 'profiles', 'service_id'\ub97c \ud0a4\ub85c\ud558\ub294 \ub515\uc154\ub108\ub9ac\n# address\uc640 \ub2e4\ub978 \ud558\ub098\uc758 \uc815\ubcf4\ub9cc \uc54c\uba74 \uac70\uc758 \ud558\ub098\ub85c \ud2b9\uc815\uc9c0\uc5b4\uc9d0\nservices = bluetooth.find_service(name=None, uuid=UUID, address=HOST)\n\nif len(services) == 0:\n    print(\"\uc7a5\uce58\ub97c \ucc3e\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4.\")\n    sys.exit()\n\nservice = services[0]\nport = service[\"port\"]\nprint(\"\ud3ec\ud2b8 :\", port)\n\n# \ube14\ub8e8\ud22c\uc2a4 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc18c\ucf13 \uc0dd\uc131\nclient_socket = bluetooth.BluetoothSocket(bluetooth.RFCOMM)\n\n# \uc11c\ubc84 \uc811\uc18d\nclient_socket.connect((HOST, port))\n\ntry:\n    while True:\n        data = input(\"client : \")\n        if data:\n            client_socket.send(data.encode())\n            data = client_socket.recv(1024)\n            print(\"server :\", data)\n\nexcept:\n    pass\n\nclient_socket.close()\n"})}),"\n",(0,s.jsx)(n.h3,{id:"\uc1a1\uc218\uc2e0-\uc4f0\ub808\ub4dc",children:"\uc1a1\uc218\uc2e0 \uc4f0\ub808\ub4dc"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import bluetooth\nimport threading\nimport queue\n\n\nclass Bluetooth_socket(threading.Thread):\n    def __init__(self):\n        super().__init__()\n        self._host = ""\n        self._port = bluetooth.PORT_ANY\n        self._uuid = "00000001-0000-1000-8000-00805F9B34FB"\n\n        # \uc218\uc2e0 \ub370\uc774\ud130 \uc800\uc7a5\uc6a9 \ud050\n        self._recv_queue = queue.Queue()\n        self.daemon = True\n\n        # \ube14\ub8e8\ud22c\uc2a4 \uc11c\ubc84 \uc18c\ucf13 \uc0dd\uc131\n        self._socket = bluetooth.BluetoothSocket(bluetooth.RFCOMM)\n        self._socket.bind((self._host, self._port))\n        self._socket.listen(1)\n        bluetooth.advertise_service(\n            self._socket,\n            name="bluetooth_server",\n            service_id=self._uuid,\n            service_classes=[self._uuid, bluetooth.SERIAL_PORT_CLASS],\n            profiles=[bluetooth.SERIAL_PORT_PROFILE],\n        )\n\n        self._connection_start_callback = None\n        self._connection_stop_callback = None\n\n        self._is_connected = False\n\n    def run(self):\n        while True:\n            # \ube14\ub8e8\ud22c\uc2a4 \uc5f0\uacb0 \ub300\uae30\n            self._connected_socket, client_address = self._socket.accept()\n            self._is_connected = True\n\n            self._start_callback()\n\n            try:\n                while True:\n                    data = self._connected_socket.recv(1024)\n                    self._recv_queue.put(data)\n\n            except:\n                pass\n\n            self._stop_callback()\n\n            self._is_connected = False\n            self._connected_socket.close()\n\n    def close(self):\n        self._connected_socket.close()\n        self._socket.close()\n\n    # \uc218\uc2e0 \ub370\uc774\ud130\n    def recv(self):\n        try:\n            data = self._recv_queue.get(block=False)\n\n        except queue.Empty:\n            return None\n\n        return data\n\n    # \uc1a1\uc2e0 \ub370\uc774\ud130\n    def send(self, data):\n        if self._is_connected:\n            self._connected_socket.send(data)\n\n    # \uc5f0\uacb0 \uc2dc\uc791 \uc2dc \ud638\ucd9c\ub418\ub294 \ucf5c\ubc31 \uc124\uc815\n    def set_connection_start_callback(self, callback=None, args=()):\n        self._connection_start_callback = callback\n        self._connection_start_callback_args = args\n\n    def _start_callback(self):\n        if self._connection_start_callback is not None:\n            self._connection_start_callback(\n                *self._connection_start_callback_args\n            )\n\n    # \uc5f0\uacb0 \uc885\ub8cc \uc2dc \ud638\ucd9c\ub418\ub294 \ucf5c\ubc31 \uc124\uc815\n    def set_connection_stop_callback(self, callback=None, args=()):\n        self._connection_stop_callback = callback\n        self._connection_stop_callback_args = args\n\n    def _stop_callback(self):\n        if self._connection_stop_callback is not None:\n            self._connection_stop_callback(*self._connection_stop_callback_args)\n\n    def is_connected(self):\n        return self._is_connected\n'})}),"\n",(0,s.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/pybluez/pybluez",children:"https://github.com/pybluez/pybluez"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);