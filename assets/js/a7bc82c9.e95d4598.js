"use strict";(self.webpackChunkwiki_loliot_net=self.webpackChunkwiki_loliot_net||[]).push([[61120],{2305:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>t,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"mlops/provisioning/ecr/push-pull","title":"ECR\uc5d0 \uc774\ubbf8\uc9c0 push/pull \ud558\uae30","description":"ECR\uc5d0 \uc774\ubbf8\uc9c0 push/pull \ud558\uae30","source":"@site/docs/mlops/provisioning/ecr/push-pull.mdx","sourceDirName":"mlops/provisioning/ecr","slug":"/mlops/provisioning/ecr/push-pull","permalink":"/docs/mlops/provisioning/ecr/push-pull","draft":false,"unlisted":false,"editUrl":"https://github.com/hhk7734/wiki/tree/main/docs/mlops/provisioning/ecr/push-pull.mdx","tags":[],"version":"current","lastUpdatedAt":1758554600000,"frontMatter":{"id":"push-pull","title":"ECR\uc5d0 \uc774\ubbf8\uc9c0 push/pull \ud558\uae30","sidebar_label":"Push/Pull","description":"ECR\uc5d0 \uc774\ubbf8\uc9c0 push/pull \ud558\uae30","keywords":["ECR"]},"sidebar":"provisioning","previous":{"title":"ECR","permalink":"/docs/mlops/provisioning/ecr/"},"next":{"title":"Spegel","permalink":"/docs/mlops/provisioning/spegel/"}}');var i=o(74848),r=o(28453);const t={id:"push-pull",title:"ECR\uc5d0 \uc774\ubbf8\uc9c0 push/pull \ud558\uae30",sidebar_label:"Push/Pull",description:"ECR\uc5d0 \uc774\ubbf8\uc9c0 push/pull \ud558\uae30",keywords:["ECR"]},l=void 0,c={},p=[{value:"dockerconfigjson \uc0dd\uc131",id:"dockerconfigjson-\uc0dd\uc131",level:2}];function u(e){const n={admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"dockerconfigjson-\uc0dd\uc131",children:"dockerconfigjson \uc0dd\uc131"}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"ECR Login Password\ub294 12\uc2dc\uac04 \ub3d9\uc548 \uc720\ud6a8\ud569\ub2c8\ub2e4."})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:'AWS_ACCOUNT_ID=\nAWS_REGION=\nECR_REGISTRY=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com\n\ncat > ecr-config.json <<EOF\n{\n  "auths": {\n    "${ECR_REGISTRY}": {\n      "auth": "$(echo -n "AWS:$(aws ecr get-login-password --region ${AWS_REGION})" | base64 | tr -d \'\\n\')"\n    }\n  }\n}\nEOF\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"kubectl create secret generic ecr-pull-secret \\\n  -n <namespace> \\\n  --type=kubernetes.io/dockerconfigjson \\\n  --from-file=.dockerconfigjson=ecr-config.json\n"})})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>t,x:()=>l});var s=o(96540);const i={},r=s.createContext(i);function t(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);