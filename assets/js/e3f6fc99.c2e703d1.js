"use strict";(self.webpackChunkwiki_loliot_net=self.webpackChunkwiki_loliot_net||[]).push([[29800],{28453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>d});var c=n(96540);const l={},s=c.createContext(l);function r(e){const i=c.useContext(s);return c.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),c.createElement(s.Provider,{value:i},e.children)}},64132:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>t,default:()=>x,frontMatter:()=>d,metadata:()=>c,toc:()=>a});const c=JSON.parse('{"id":"linux/linux-kernel/device-tree/device-tree-basics","title":"Device tree basics","description":"Device tree basics","source":"@site/docs/linux/linux-kernel/device-tree/device-tree-basics.mdx","sourceDirName":"linux/linux-kernel/device-tree","slug":"/linux/linux-kernel/device-tree/device-tree-basics","permalink":"/docs/linux/linux-kernel/device-tree/device-tree-basics","draft":false,"unlisted":false,"editUrl":"https://github.com/hhk7734/wiki/tree/main/docs/linux/linux-kernel/device-tree/device-tree-basics.mdx","tags":[],"version":"current","lastUpdatedAt":1745770667000,"frontMatter":{"id":"device-tree-basics","title":"Device tree basics","sidebar_label":"Basics","description":"Device tree basics","keywords":["kernel","device tree"]},"sidebar":"linux-kernel","previous":{"title":"DKMS","permalink":"/docs/linux/linux-kernel/module/dkms"},"next":{"title":"Overlay","permalink":"/docs/linux/linux-kernel/device-tree/device-tree-overlay"}}');var l=n(74848),s=n(28453),r=n(86025);const d={id:"device-tree-basics",title:"Device tree basics",sidebar_label:"Basics",description:"Device tree basics",keywords:["kernel","device tree"]},t=void 0,o={},a=[{value:"Using device tree compiler",id:"using-device-tree-compiler",level:2},{value:"Check nodes and properties",id:"check-nodes-and-properties",level:3},{value:"DTS modification",id:"dts-modification",level:3},{value:"fdtget/fdtput",id:"fdtgetfdtput",level:4},{value:"Decompiled file modification",id:"decompiled-file-modification",level:4},{value:"Using Linux kernel source",id:"using-linux-kernel-source",level:2}];function h(e){const i={admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(i.p,{children:["Typically, ",(0,l.jsx)(i.strong,{children:"<.dtsi>"})," file contain definitions of SoC-level information."]}),"\n",(0,l.jsxs)(i.p,{children:["The ",(0,l.jsx)(i.strong,{children:"<.dts>"})," file contains board-level information."]}),"\n",(0,l.jsx)("center",{children:(0,l.jsx)("img",{src:(0,r.Ay)("img/linux/linux-kernel/device-tree/device-tree-inclusion-example.jpg")})}),"\n",(0,l.jsx)("center",{children:(0,l.jsx)("img",{src:(0,r.Ay)("img/linux/linux-kernel/device-tree/device-tree-terms.jpg")})}),"\n",(0,l.jsx)(i.h2,{id:"using-device-tree-compiler",children:"Using device tree compiler"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-shell",children:"sudo apt install -y device-tree-compiler\n"})}),"\n",(0,l.jsx)(i.h3,{id:"check-nodes-and-properties",children:"Check nodes and properties"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"/proc/device-tree/"})," and ",(0,l.jsx)(i.code,{children:"/"})," node of a device tree source(DTS) are the same."]}),"\n",(0,l.jsx)(i.p,{children:"If a DTS is"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-clike",children:'/ {\n    model = "A";\n}\n'})}),"\n",(0,l.jsxs)(i.p,{children:["The structure of ",(0,l.jsx)(i.code,{children:"/proc/device-tree/"})," is as follows."]}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-shell",children:"/proc/device-tree\n\u2514\u2500\u2500 model\n"})}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-shell",metastring:"{1}",children:"$ cat /proc/device-tree\nA\n"})}),"\n",(0,l.jsx)(i.p,{children:"So, you can check DTS with one of the following commands."}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-shell",children:"tree /proc/device-tree\n"})}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-shell",children:"fdtdump <.dtb file name> | vim -\n"})}),"\n",(0,l.jsx)(i.h3,{id:"dts-modification",children:"DTS modification"}),"\n",(0,l.jsx)(i.h4,{id:"fdtgetfdtput",children:"fdtget/fdtput"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-shell",children:"fdtget <.dtb> <node> <property>\n"})}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-shell",children:"fdtput -t <type> <.dtb> <node> <property> <value>\n"})}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:["type","\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"s=string, i=int, u=unsigned, x=hex"}),"\n",(0,l.jsx)(i.li,{children:"Optional modifier prefix: hh or b=byte, h=2 byte, l=4 byte (default)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(i.h4,{id:"decompiled-file-modification",children:"Decompiled file modification"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-shell",children:"dtc -I dtb -O dts <.dtb> -o <.dts>\n"})}),"\n",(0,l.jsxs)(i.p,{children:["After decompiling with the above command, edit ",(0,l.jsx)(i.code,{children:"<.dts>"}),". Then, compile the edited file with the below command."]}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-shell",children:"dtc -I dts -O dtb <.dts> -o <.dtb>\n"})}),"\n",(0,l.jsx)(i.h2,{id:"using-linux-kernel-source",children:"Using Linux kernel source"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-shell",children:"git clone --depth=1 --branch=<branch> <repository>\n"})}),"\n",(0,l.jsx)(i.p,{children:"After editing DTS, check Makefile."}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-makefile",metastring:'title="linux/arch/<arch>/boot/dts/<vendor>/Makefile"',children:"dtb-$(CONFIG_ARCH_<BOARD>) += <board>.dtb\n"})}),"\n",(0,l.jsx)(i.p,{children:"Then, execute the below commands."}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-shell",children:"make xxx_defconfig \\\n&& make dtbs\n"})}),"\n",(0,l.jsxs)(i.p,{children:["Then, DTB will be created in ",(0,l.jsx)(i.code,{children:"linux/arch/<arch>/boot/"}),"."]}),"\n",(0,l.jsx)(i.admonition,{type:"tip",children:(0,l.jsxs)(i.p,{children:["If the above command fails, check ",(0,l.jsx)(i.strong,{children:"arch/<arch>/configs"}),". If not in arch/<arch>/configs, get a config file using ",(0,l.jsx)(i.code,{children:"zcat /proc/config.gz > <board>_defconfig"})," from the kernel installed on the desired board."]})})]})}function x(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}}}]);